// Code generated by go-bindata.
// sources:
// builtin/tool/data/collectd/conf/common/collectd.conf
// builtin/tool/data/collectd/conf/metrics/cpu/cpu.conf
// builtin/tool/data/collectd/conf/metrics/memory/memory.conf
// builtin/tool/data/collectd/ports.yml
// builtin/tool/data/collectd/run.sh
// builtin/tool/data/collectd/setup.sh
// builtin/tool/data/grafana/conf/common/dashboard.json
// builtin/tool/data/grafana/conf/common/datasources.json
// builtin/tool/data/grafana/conf/metrics/cpu/panel.json
// builtin/tool/data/grafana/conf/metrics/memory/panel.json
// builtin/tool/data/grafana/ports.yml
// builtin/tool/data/grafana/run.sh
// builtin/tool/data/grafana/setup.sh
// builtin/tool/data/graphite/conf/common/carbon.conf
// builtin/tool/data/graphite/conf/common/graphite-api.yaml
// builtin/tool/data/graphite/conf/common/storage-aggregation.conf
// builtin/tool/data/graphite/conf/common/storage-schemas.conf
// builtin/tool/data/graphite/conf/common/supervisord.conf
// builtin/tool/data/graphite/ports.yml
// builtin/tool/data/graphite/run.sh
// builtin/tool/data/graphite/setup.sh
// builtin/tool/data/prom-collectd-exporter/ports.yml
// builtin/tool/data/prom-collectd-exporter/run.sh
// builtin/tool/data/prom-collectd-exporter/setup.sh
// builtin/tool/data/prometheus/conf/common/prometheus.yml
// builtin/tool/data/prometheus/ports.yml
// builtin/tool/data/prometheus/run.sh
// builtin/tool/data/prometheus/setup.sh
// builtin/tool/data/riemann/conf/common/input.clj
// builtin/tool/data/riemann/conf/common/output.clj
// builtin/tool/data/riemann/conf/common/riemann.config
// builtin/tool/data/riemann/ports.yml
// builtin/tool/data/riemann/run.sh
// builtin/tool/data/riemann/setup.sh
// DO NOT EDIT!

package tool

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _builtinToolDataCollectdConfCommonCollectdConf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\x4f\x6b\xe3\x30\x10\xc5\xef\xfa\x14\x83\x20\x97\x85\xd8\x26\x4b\x96\x3d\x98\x1c\x9a\x12\x12\x30\x25\x6d\x0c\x3d\x16\xd5\x9e\xc4\x22\x8a\x64\xa4\x71\xd3\x52\xfa\xdd\x2b\xd5\xb1\xf3\xa7\xc9\xdc\xe6\x3d\xcf\xcc\xcf\x0f\xe5\x1f\x35\xba\xfb\x3b\xe0\xb1\xa9\x29\x2e\x8c\x52\x58\x50\x19\xbb\x4a\x58\x3c\xb6\x14\xbe\x8a\xca\x57\xce\xd8\x42\x13\xda\x37\xa1\x60\xc4\xa6\x15\x16\xdb\xbc\xb2\xe8\x2a\xa3\x4a\x07\x64\x1b\x64\xcf\x56\x12\x3e\x36\xd8\x60\x26\x77\x92\xe6\x72\x53\xc1\x38\x49\x92\x4b\x23\x33\xfb\x56\x67\x99\x11\xe5\x52\x35\x1b\xa9\x81\xba\x65\x8c\xa5\x0b\x5d\xa8\xa6\xc4\x4b\x32\xa4\x22\x96\xad\xc5\x27\x0c\x7c\xcd\xa4\xf2\x48\xc0\xff\x44\x85\xd1\x6b\xce\xd2\xf8\x30\x3a\x61\xec\x73\x00\x72\x0d\x5e\x27\x21\xb5\x83\x28\x93\x7a\xeb\x80\xd7\xd6\xec\x86\xdd\xca\x21\xbe\xd7\xc6\xfa\x15\x1c\x86\x83\xaf\x53\x1c\x8d\xb4\x37\x76\xcb\xd2\xf3\x3e\x9c\x5d\xf9\x10\xc2\xd1\x5b\x9b\xf8\x68\xfc\x7f\xf4\x2f\xc0\xb4\xb3\x93\x80\x82\xba\xfc\x39\x71\x0b\xcb\x4a\xdc\x09\xad\x7f\x71\xec\x43\x74\x2f\x07\xb7\xa7\xe1\x67\xf2\x21\x8c\xf4\xc1\x84\xcc\xce\xc5\x50\x73\xe3\xe8\xa8\xf7\xf2\xd2\xf3\x02\x1f\xfb\x3a\xd1\xac\x21\xe3\xff\x09\xf2\xe9\xb2\x17\x57\x64\x2c\x3e\x09\x42\x07\x6b\xa1\x1c\xf6\xc6\xd5\x57\xd0\x99\x79\x9e\xcd\x44\xe1\x47\xe1\x6f\x12\x25\x2d\x61\x1c\x10\x5b\xb0\x5c\x6c\x80\x77\xe9\x5d\x0f\xeb\x3b\x00\x00\xff\xff\x09\x72\xf0\xd5\xa1\x02\x00\x00")

func builtinToolDataCollectdConfCommonCollectdConfBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataCollectdConfCommonCollectdConf,
		"builtin/tool/data/collectd/conf/common/collectd.conf",
	)
}

func builtinToolDataCollectdConfCommonCollectdConf() (*asset, error) {
	bytes, err := builtinToolDataCollectdConfCommonCollectdConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/collectd/conf/common/collectd.conf", size: 673, mode: os.FileMode(420), modTime: time.Unix(1472740227, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataCollectdConfMetricsCpuCpuConf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\xc9\x4f\x4c\x09\xc8\x29\x4d\xcf\xcc\x53\x48\x2e\x28\xe5\xb2\x41\xb0\xed\xb8\x14\x14\xc2\x12\x73\x4a\x53\x8b\x03\x52\x8b\x92\x53\xf3\x4a\x12\xd3\x53\x15\x4a\x8a\x4a\x53\x81\xe2\x41\xa9\x05\xf9\x45\x25\x4e\x95\xce\x05\xa5\x0a\x69\x89\x39\xc5\xa9\x5c\x36\xfa\x10\x9d\x76\x5c\x80\x00\x00\x00\xff\xff\xad\xc2\x05\xa7\x52\x00\x00\x00")

func builtinToolDataCollectdConfMetricsCpuCpuConfBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataCollectdConfMetricsCpuCpuConf,
		"builtin/tool/data/collectd/conf/metrics/cpu/cpu.conf",
	)
}

func builtinToolDataCollectdConfMetricsCpuCpuConf() (*asset, error) {
	bytes, err := builtinToolDataCollectdConfMetricsCpuCpuConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/collectd/conf/metrics/cpu/cpu.conf", size: 82, mode: os.FileMode(420), modTime: time.Unix(1472561293, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataCollectdConfMetricsMemoryMemoryConf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\xc9\x4f\x4c\x09\xc8\x29\x4d\xcf\xcc\x53\xc8\x4d\xcd\xcd\x2f\xaa\xe4\xb2\x41\xe1\xda\x71\x29\x28\x84\x25\xe6\x94\xa6\x16\x07\xa4\x16\x25\xa7\xe6\x95\x24\xa6\xa7\x2a\x94\x14\x95\xa6\x72\xd9\xe8\x43\x14\xda\x71\x01\x02\x00\x00\xff\xff\x84\xf1\xdb\x55\x44\x00\x00\x00")

func builtinToolDataCollectdConfMetricsMemoryMemoryConfBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataCollectdConfMetricsMemoryMemoryConf,
		"builtin/tool/data/collectd/conf/metrics/memory/memory.conf",
	)
}

func builtinToolDataCollectdConfMetricsMemoryMemoryConf() (*asset, error) {
	bytes, err := builtinToolDataCollectdConfMetricsMemoryMemoryConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/collectd/conf/metrics/memory/memory.conf", size: 68, mode: os.FileMode(420), modTime: time.Unix(1472561295, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataCollectdPortsYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x55\xb0\x30\x34\x32\x05\x04\x00\x00\xff\xff\xf4\x57\xc4\x60\x06\x00\x00\x00")

func builtinToolDataCollectdPortsYmlBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataCollectdPortsYml,
		"builtin/tool/data/collectd/ports.yml",
	)
}

func builtinToolDataCollectdPortsYml() (*asset, error) {
	bytes, err := builtinToolDataCollectdPortsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/collectd/ports.yml", size: 6, mode: os.FileMode(420), modTime: time.Unix(1472550439, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataCollectdRunSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\xc1\x4e\xb4\x30\x14\x85\xf7\x7d\x8a\xf3\x33\x2c\x7e\x17\xd8\x07\x30\x4e\xc6\x18\x93\xd9\xa8\x0b\xdd\x89\x31\xa5\x5c\x42\x13\xb8\x25\xb4\x24\xc6\xa7\xf7\x02\x03\x81\xd9\x48\x08\xe1\x70\xcf\xf9\x0e\x6d\x0f\xff\x74\xe1\x58\x17\x26\xd4\x4a\x05\x8a\xc8\x48\xa9\x03\x5c\x05\xeb\x9b\x86\x6c\x2c\xe1\x02\x1a\x33\xb0\xad\x49\xde\x19\x46\x26\x1c\x8d\x63\xea\xd1\xf5\xde\xc2\x70\x89\xda\x87\xc8\xa6\x25\x89\x5a\xc3\x28\x08\xad\x1f\x38\x4a\xc2\x33\x74\xcb\x51\xaf\xd6\x49\xad\x7e\x29\xfa\x40\x56\x6e\x3c\x9f\x77\x88\x35\xb1\x02\x86\x89\x81\xe9\xb3\xc8\x59\x65\x1e\xf2\xc3\xdb\xc0\x3c\xaf\xdc\x85\x45\xfb\x86\x0d\x0f\x38\xbf\xbe\xbd\x7f\x8d\x8f\x97\x87\xe7\xa7\xfb\xf4\xbf\x35\x71\xef\xbe\x99\x6c\x33\x88\x91\xa4\xbb\x40\xb2\x63\x8d\x57\xd7\x3b\x8e\x15\x92\x9c\xcf\x4b\x5d\x7e\x15\xca\x65\x98\xe0\x78\x84\xf6\x5d\xd4\xcb\xa6\x6a\x8a\x76\x15\xb7\xb2\xa1\xd5\xc4\x94\x45\xc8\x7d\x59\xc8\x8f\xf4\x9f\xb6\x9d\xf4\x4d\xf6\x0a\x13\xc6\xc3\x5b\x4f\x2a\x7b\xfc\xab\x05\x59\xa5\xa8\x09\xb4\xd0\xd2\x93\x14\xfe\x06\x00\x00\xff\xff\xbf\x09\x82\x6a\x04\x02\x00\x00")

func builtinToolDataCollectdRunShBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataCollectdRunSh,
		"builtin/tool/data/collectd/run.sh",
	)
}

func builtinToolDataCollectdRunSh() (*asset, error) {
	bytes, err := builtinToolDataCollectdRunShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/collectd/run.sh", size: 516, mode: os.FileMode(420), modTime: time.Unix(1472480618, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataCollectdSetupSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x4f\x4f\xdc\x3c\x10\xc6\xcf\xf8\x53\xcc\x0b\xaf\x38\x35\x71\x4b\x81\x43\x25\x0e\x5b\x36\x48\x48\xcb\x22\x51\x54\xf5\x50\x69\xe5\x38\x93\xc4\xc5\x7f\x52\x7b\xb2\x2c\x54\x7c\xf7\xda\x9b\x25\xb0\x74\x55\xf5\x92\xd8\x8f\x1f\xcf\x78\xe6\x37\x07\xff\xf1\x52\x59\x5e\x8a\xd0\xb2\x80\x04\x19\x32\x86\xab\xce\x79\x82\x69\xf1\xf9\x72\x32\x5f\x5c\xdc\x5c\xcf\x6f\x8b\xf9\xf4\xcc\x3a\xab\x2c\xa1\x17\x92\xd4\x32\xda\xce\xaf\x67\xb3\xe2\xfc\x76\xba\xf8\x5a\xdc\x7c\xb9\xbc\x9e\x9f\x9d\xe4\x27\xf9\xd1\x8b\x7c\x71\x59\xcc\xa6\x8b\xab\xc9\xb7\xc5\xac\x98\x9f\x7d\x78\x7f\x74\xcc\x98\xe8\x28\x6b\x62\x9a\xbe\xab\x04\xe1\xb8\x55\x36\x90\xd0\x1a\xb2\x07\xf8\xce\xf6\xf6\xee\x93\x96\x16\xbd\x7d\x54\xdd\x7a\xd5\x3d\x50\xeb\x6c\xd6\x6d\xb6\x5a\x95\xe4\x9c\x7e\x7d\x54\xe1\x72\xd8\x7a\x47\xae\xec\xeb\x4c\x66\xd2\x99\x4e\x69\xf4\x4c\x56\xc0\xc9\x74\x6c\x1d\xb8\x25\xea\xc2\x27\xce\xa5\xd3\x1a\x25\x55\xb9\xf3\x0d\xaf\xa3\x2f\x8c\x52\xf6\xff\xaf\xb7\xd5\x3d\xe5\x24\x7c\x5e\x3e\x1e\xb1\xf8\x87\x1f\xab\x1a\xfe\xc5\xbc\x97\x52\xff\xcd\xc8\xd8\xc1\x78\x0e\xb5\x42\x5d\x05\x68\xc5\x12\x41\x80\x11\x2b\x65\x7a\x03\x1a\x6d\x43\x2d\xb8\x1a\x4e\x3f\x82\x6c\x45\x02\x80\x3e\x40\xf9\x00\x15\xd6\xa2\xd7\xf4\x0e\xee\x31\xda\xef\x10\x14\x01\xf5\x56\x94\x1a\x23\xcd\x0a\x32\x05\xfb\x81\x4f\x27\xb7\x93\x35\x87\xf9\xe4\xaa\x48\x30\xe0\xf4\x78\x87\xf8\xea\x75\x5b\xe8\x9e\x78\xb3\x0f\xc1\x4b\x5e\x09\x34\xce\xf2\x4e\xf7\x8d\xb2\x79\xcb\xf2\xd8\x2f\x5b\xab\xa6\xf7\xc8\xd6\xd9\x13\xc2\x0d\xca\x54\xd7\x33\xd5\xca\xc9\x3b\xf4\x2f\x65\x0e\x01\x40\xd5\x60\x31\x3e\x92\x1c\xc4\xb0\x8a\x9c\xdf\x38\x53\x4b\x22\x30\xd7\xd1\x08\x84\x47\xe0\x70\x78\x18\x01\x1f\xc0\x16\xc4\x46\x51\xdb\x97\x79\x24\xcd\x8d\x51\x8d\x56\xe8\xf9\x10\x25\x1b\xdb\x3e\xe4\xe3\xc2\xcb\x36\x0e\x2e\x37\x22\xc4\xfe\xe5\x69\xb2\x36\x11\x87\x31\xfb\x53\xf7\x66\x87\x68\x96\xb0\x3b\x41\x36\x78\x9f\xcb\xdd\xd8\x63\x25\xdb\x42\x1a\xe1\x71\xde\x3d\x78\xfc\xd9\x2b\x8f\x06\x2d\x85\x9c\x56\xc4\x58\x4c\xb0\x6e\x6c\xfc\x98\xd4\xef\x71\x4e\x93\xf8\xa6\x2d\x48\x72\xfb\xfc\xe5\xb6\x41\xf2\x4a\x86\x1d\x17\x94\x95\xba\xaf\xf0\x77\x00\x00\x00\xff\xff\x0f\x08\xd2\x7a\xfb\x03\x00\x00")

func builtinToolDataCollectdSetupShBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataCollectdSetupSh,
		"builtin/tool/data/collectd/setup.sh",
	)
}

func builtinToolDataCollectdSetupSh() (*asset, error) {
	bytes, err := builtinToolDataCollectdSetupShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/collectd/setup.sh", size: 1019, mode: os.FileMode(420), modTime: time.Unix(1472593737, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGrafanaConfCommonDashboardJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x91\x31\x4f\xc4\x30\x0c\x85\xf7\xfb\x15\x55\x66\x90\x0e\xa4\x32\xb0\xc2\xc2\xca\xc0\x82\x18\xdc\xab\xdb\x46\xa4\x76\x15\xbb\x14\x81\xfa\xdf\x49\xd2\xb4\xf4\x10\x37\xe6\xf3\xb3\x5f\x9e\xfd\x7d\x28\x0a\x53\x83\x74\x15\x83\xaf\xcd\x7d\x11\x41\x40\x40\xc4\x0a\x6a\x99\x64\x83\x01\x3b\x2b\x1a\xde\xaf\x6f\x09\xcc\x57\x8b\x18\x6b\xab\x50\x39\x0c\x15\xf5\x23\x66\xda\x12\xea\x53\x1c\x49\xa3\x73\x99\x75\xb6\xc6\x07\x26\xf5\xec\xe2\xdc\x06\x9c\xac\x72\xfb\x47\xea\x2c\xbd\x4b\xf2\xca\x40\xad\x26\x0b\xf3\x88\x0d\x8c\x4e\xcd\xca\xa1\x4d\xba\xf5\x8f\xdc\x93\x05\x93\x5e\xbf\xad\x3d\x7e\x31\xa5\xee\xca\xf3\x24\xe8\xd7\x6e\x8f\x8d\x47\xe9\x62\xa5\x94\x0d\x06\xc9\x6e\xe4\x1a\x3f\x54\x4e\xec\x1c\x0c\x82\xe7\x9f\xbf\xbc\x85\x25\x35\xda\xb6\x8b\x7b\x33\xb7\xe5\x71\xf8\x34\xbb\xd2\x00\x84\x6e\x1f\xf3\xdf\xa8\xc5\x33\x4f\x26\x97\xe7\xb3\x64\x72\xea\xb0\x87\x17\xf4\x12\x4e\x15\x3a\xee\x32\xff\xd8\xc8\x71\xb7\x83\xfd\x29\x1b\xcf\x7d\xb4\x20\x9e\xae\x6f\xca\x7e\xfb\x94\x51\xce\x78\x71\x8c\x7e\xe9\xd0\x86\xc3\xd0\xc9\x5b\xdd\xc2\x1f\xe6\x9f\x00\x00\x00\xff\xff\x9b\x01\x0d\xb2\x3f\x02\x00\x00")

func builtinToolDataGrafanaConfCommonDashboardJsonBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGrafanaConfCommonDashboardJson,
		"builtin/tool/data/grafana/conf/common/dashboard.json",
	)
}

func builtinToolDataGrafanaConfCommonDashboardJson() (*asset, error) {
	bytes, err := builtinToolDataGrafanaConfCommonDashboardJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/grafana/conf/common/dashboard.json", size: 575, mode: os.FileMode(420), modTime: time.Unix(1472659744, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGrafanaConfCommonDatasourcesJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x90\xb1\x6e\x02\x31\x0c\x40\xf7\xfb\x0a\x2b\xd2\x6d\xa5\x30\x96\xdb\xaa\x56\xea\xd2\x81\xa5\x1f\xe0\x5e\x0c\xb1\x9a\xcb\x45\xb1\x23\x8a\x10\xff\xde\x1c\x14\xd1\x50\x16\x32\xbe\x97\xc4\x4f\xde\xb7\x33\xe0\x35\xf4\x63\x50\xe4\x20\xf0\xf8\xce\xe1\x4b\xc0\xc4\x34\x0e\xa4\x8e\xb2\x18\x68\x0f\xcd\xbe\x01\x30\x01\x07\x32\x1d\x98\xd5\xc5\x3d\x4c\x5c\x77\xf1\xc8\xe3\x15\xcf\xc9\x4f\xd8\xa9\xc6\x6e\x3e\xbf\xd8\x6e\xb9\x58\x2e\x4e\x57\xb0\xef\x49\xe4\xf7\xf1\xf7\xee\x04\x59\x5e\x69\x8d\xd9\x6b\xe1\x9a\x32\x35\x65\x7e\xc9\x24\x2f\x74\xb3\x75\x93\x30\x3a\x56\xfa\x5f\xfa\x76\x36\x55\xe7\xa6\xa2\x75\xe5\xd9\x75\x4f\xe5\xdc\xd1\x78\x84\x9f\x28\xdc\x3f\x67\x75\x37\xe1\x87\x50\x9a\x7e\x41\x3b\x70\x30\xb5\x5b\xa1\xc8\x76\x4c\xf6\xca\x6f\x59\xdd\x4b\x22\x4b\x41\x19\xbd\xfc\xdd\x07\x50\xb0\x30\x6b\x0f\x3f\x01\x00\x00\xff\xff\x1c\xc4\x13\xa5\xc1\x01\x00\x00")

func builtinToolDataGrafanaConfCommonDatasourcesJsonBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGrafanaConfCommonDatasourcesJson,
		"builtin/tool/data/grafana/conf/common/datasources.json",
	)
}

func builtinToolDataGrafanaConfCommonDatasourcesJson() (*asset, error) {
	bytes, err := builtinToolDataGrafanaConfCommonDatasourcesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/grafana/conf/common/datasources.json", size: 449, mode: os.FileMode(420), modTime: time.Unix(1472808734, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGrafanaConfMetricsCpuPanelJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x55\xd1\x6b\xdb\x3e\x10\x7e\xef\x5f\x61\x04\xa5\xe9\x8f\x10\x12\xff\xb6\x16\x06\x7b\x68\x0b\x65\x83\xae\x2b\xeb\xf6\xd4\x8e\xa0\xd8\x17\x5b\x54\xb6\x8c\x74\x4e\x13\x32\xef\x6f\xdf\x49\xb6\x13\x5b\xf6\xca\xfa\x60\xaa\xef\x74\xd2\x77\x9f\xbe\xbb\xec\x4f\x02\xfa\x63\x5c\x0a\x6e\x6e\x94\x54\xda\xb0\x0f\xc1\xbe\x9a\xd6\xf0\x8a\xbb\xf5\x9a\x4b\x03\x0d\x14\x73\xe4\x46\x95\x3a\x02\x0a\xe4\xa5\x94\x0d\x0e\xb1\x40\xbe\x92\x16\x45\x5d\xb6\xbb\x41\x6b\xa5\xbd\x13\xd6\x42\x4a\x82\x16\xcd\x32\xd1\x22\xb6\x77\xba\x95\x43\x30\xd5\x60\x52\x25\xe3\x45\xef\x0a\x2f\xe6\xd8\xd2\x06\xa6\x93\x15\x9f\x84\x8b\x8b\x69\x10\xce\xe7\xf4\xb9\x9c\x06\xf3\x59\x78\x79\xce\xc6\xd2\xc2\x37\x8e\x0c\xbd\x23\xff\x7f\x37\x0d\x16\x8b\xb0\xf9\xd0\x99\xe1\x39\x73\x69\xad\x3c\x8e\x78\x5b\x87\x30\xf7\xf0\xda\xaf\x5e\x42\x02\xb9\x57\x1c\x29\x9d\xe4\x57\xe6\x7b\xa3\x55\x47\x98\x3a\xbc\x49\x46\xd0\xa8\xd4\x1a\x72\x1c\x89\x64\x7c\x3b\x86\x8a\x7c\x04\xd5\x22\x49\xf1\x51\xc4\x63\xf7\x92\x00\x7d\xf2\xb5\x34\x0a\xb9\x1c\xd9\xbd\xe1\xb2\x84\x83\x33\x7a\x9a\x48\x91\xbb\x48\x57\x06\x82\x5e\x45\x8c\x29\xc1\xe1\x11\x7b\xb1\xdb\x9e\x7e\x36\x80\x7d\x94\x07\x25\x72\xfc\xa2\x1c\x41\x16\xa9\x3c\x87\x08\x21\x6e\xde\x91\x15\x40\xa6\xcb\x91\x27\x1e\x7f\x56\xd8\x34\xcd\x63\x51\xda\x13\xdf\x77\x51\xdf\xbd\xa4\x62\x0c\x1a\xdc\x23\xaf\xa5\xc2\xf6\x6c\x03\x5a\x80\xf9\xba\x21\xbf\x92\x3e\x3d\x62\xa6\xe0\x56\xcc\x8b\x76\x89\x3c\x7a\xf1\x4e\x35\x08\x45\x01\xf1\x1d\xd5\xe9\x45\x90\xeb\x04\x1c\x8b\xa7\x83\x7a\x47\x33\xb8\xd5\x69\x20\xd6\x01\x15\x8b\x5c\xe4\x26\x98\xdd\x59\x61\x88\xbd\x56\x19\x60\x0a\x54\x52\x70\x5a\xf5\x32\x18\x6c\x0b\x57\x80\x29\xb3\x49\xa4\xa4\x24\x95\xe2\x65\x54\x94\xcb\x46\xa1\x3d\xfd\xff\xf1\xf7\x33\x2b\xa9\xaa\x5f\x66\x47\xec\xb2\x67\x56\x9d\x07\xab\x5d\x30\xa1\x5c\xa5\x49\xd4\x25\x5d\x86\x3c\x8f\xa0\xdb\x26\x1d\xd3\xde\x2a\x9d\x71\x6b\x38\xb6\xdf\x0f\x72\xaa\xca\x4f\x22\xa9\x41\x93\x2b\x6e\x79\x84\xae\x85\x42\x6f\x83\x95\x68\x08\x53\xf1\x40\x62\x8d\x2a\x90\x68\x5e\xa4\x02\x61\x58\x7f\x3a\x6a\xe1\x8e\xde\x96\x76\xa2\x55\x59\x5c\xef\xee\xc9\x4d\x93\x54\x19\x34\xb3\xff\x66\xa4\xcb\x6c\x6f\x55\x99\xd6\xaa\x54\xd4\xda\xd3\xe0\x8c\x74\x3c\xf3\x65\xb0\xcc\xf2\x78\x70\xb5\x86\xf5\x67\xdb\xd0\xec\x8a\x1d\x02\xf5\x96\xd6\x2e\x28\x32\xb8\xa5\xc7\xeb\x4f\x47\x8b\x3e\xa6\x62\x8d\x3e\x8c\x6e\x0a\xb0\x4f\x96\x61\x70\xf3\xf0\xa3\x35\x24\x2a\x25\x51\x14\xfd\xd9\x91\x99\x6f\x60\x94\x2c\x51\xa8\xb1\xfe\x36\x29\xd7\x10\x0f\xbb\xd8\xd0\xeb\x11\x3a\xf7\x1b\x78\x89\xbb\xa2\x6e\xb5\x32\x2b\x25\x47\xb1\x81\xfe\x7c\x6b\xe3\xee\x29\x5a\x66\x5b\xbe\x15\xa6\xcf\xab\x33\x3c\x7a\xf9\x3b\xbe\x85\xb7\xbc\xcf\xd6\x07\x97\x35\xd6\x1d\x98\x91\xaf\xc0\x0e\x20\x36\x08\xa8\xe4\x9a\x1b\x38\xce\xdf\xa3\x48\x6e\x22\x2e\xe6\x73\x1f\x77\x33\xd1\x47\x7d\xea\x1d\xfa\x6f\xf2\xa5\x3c\xfd\x57\xb6\xfd\x1f\x98\x7f\xe2\x3b\x92\x52\x13\x1e\x09\x8c\x72\xae\x4d\x78\x52\xfd\x09\x00\x00\xff\xff\xd9\x90\xf1\xad\xd1\x07\x00\x00")

func builtinToolDataGrafanaConfMetricsCpuPanelJsonBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGrafanaConfMetricsCpuPanelJson,
		"builtin/tool/data/grafana/conf/metrics/cpu/panel.json",
	)
}

func builtinToolDataGrafanaConfMetricsCpuPanelJson() (*asset, error) {
	bytes, err := builtinToolDataGrafanaConfMetricsCpuPanelJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/grafana/conf/metrics/cpu/panel.json", size: 2001, mode: os.FileMode(420), modTime: time.Unix(1472745327, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGrafanaConfMetricsMemoryPanelJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x51\x6b\xe3\x38\x10\x7e\xef\xaf\x30\x82\xd2\xf4\x08\x21\xf1\xdd\xb5\x70\x70\x0f\xed\xb2\x65\x17\xda\xee\xb2\xdd\xb7\xb2\x84\x89\x3d\xb1\x45\x65\xcb\x48\xe3\x34\x21\xe4\xbf\xef\x48\xb6\x5b\x5b\x36\x7d\xda\x3c\x04\xf4\x8d\x34\xfa\xe6\xd3\x37\xe3\xe3\x59\xc4\x3f\x01\x4a\x82\xfd\xa4\x95\x36\x56\xfc\x17\x1d\x4f\xf3\x06\xde\x80\x5f\x6f\x41\x59\x6c\xa1\x14\x08\xac\xae\x4d\x82\x1c\x28\x6b\xa5\x5a\x1c\x53\x49\xb0\x51\x0e\x25\x53\x77\xbb\xd1\x18\x6d\x82\x0c\x5b\xa9\x14\x43\xab\x76\x99\x19\x99\xba\x3b\xfd\xca\x23\x94\x1b\xb4\xb9\x56\xe9\x6a\x70\x45\x10\xf3\x6c\x79\x83\x30\xd9\x06\x66\xf1\xea\x6a\x1e\xc5\xcb\x25\xff\x5d\xcf\xa3\xe5\x22\xbe\xbe\x14\x53\xc7\xe2\x0f\x52\xc6\x41\xca\xbf\xff\x99\x47\xab\x55\xdc\xfe\x71\xce\x78\x3a\xe7\xbd\x2c\xb1\xab\xd1\x87\x3b\xf9\x7c\x61\x71\xb7\xb0\x8f\xf8\x3a\x54\x47\x61\x86\x65\x50\x3c\xbf\x44\x56\xde\xd8\x9f\xad\x96\x3d\xe1\x9a\xf0\x2e\x9b\x40\x93\xda\x18\x2c\x69\x22\x52\xc0\x7e\x0a\x95\xe5\x04\x6a\x64\x96\xd3\x93\x4c\xa7\xee\xe5\x42\x87\xe4\x1b\x09\x34\x81\x9a\xd8\xbd\x03\x55\xa3\x9d\xd4\x44\xb1\x58\x36\x90\x81\xa1\x57\x99\x52\xde\x53\x8b\xb1\x17\xb7\xed\xf9\x57\x0b\xb8\x47\xfb\xae\x65\x49\x0f\xda\x13\x14\x89\x2e\x4b\x4c\x08\xd3\xf6\x4d\x44\x85\x6c\xca\x92\x20\x0b\xf8\x8b\xca\x1d\x33\x90\xca\xda\x65\xfc\xb7\x8f\x86\xee\x66\x15\x53\x34\xe8\x4d\xb0\x55\x9a\xba\xdc\x16\x8d\x44\xfb\x6d\xc7\x7e\x66\x7d\x06\xc4\x6c\x05\x4e\xcc\xab\x6e\x49\x90\xbc\x04\x59\x2d\x61\x55\xe1\xc0\x27\x6d\x84\xc0\x64\xe8\x59\x3c\xbf\xa9\xf7\x6e\x06\xbf\x3a\x8f\xe4\x36\xe2\x62\x09\x64\x69\xa3\xc5\xbd\x13\x86\xd9\x1b\x5d\x20\xe5\xc8\x25\x45\xe7\xa7\xc1\x09\x81\xfb\xca\x17\x60\xeb\x62\x96\x68\xa5\x58\xa5\x74\x5d\x60\xa1\xcd\x61\xdd\x8a\x74\x6c\x96\xff\x5f\xd4\x16\xd3\x8b\xd3\x65\xb4\x39\x44\x33\x3e\xa7\x0d\x0b\xba\xe6\x8b\x08\xca\x04\xfb\x76\xef\x19\xf6\x4e\x9b\x02\x9c\xd9\xc4\xf1\x38\x3a\x73\x3a\x85\x87\x58\x66\x34\xec\x88\x3b\x48\xc8\xb7\x57\x1c\x6c\x70\xf2\x8c\x61\x2e\x1c\x59\xa8\xc9\xea\x33\x03\x55\x2e\x09\xc7\xb5\x37\x82\x3a\x6e\x7e\xa4\xdd\x1e\x1e\xd9\x2e\xb3\x5c\x5b\xb2\x8b\xbf\x16\x4d\xd5\x0b\x57\x34\x77\xf5\xa8\x3c\xc2\x3d\x7d\xe6\x39\x16\x8e\xac\x3e\xa5\x32\x1d\xdd\x69\x70\xfb\xd5\x75\xb1\xb8\x11\x6f\x81\x66\x4b\xe7\x11\x92\x05\xde\xf1\x8b\x0d\x47\xa6\x43\x9f\x72\xb9\xa5\x10\x26\xdf\xfa\xe2\x8b\x63\x1d\x3d\x78\xce\x9d\x11\x49\x6b\x45\xb2\x1a\xce\x8c\xc2\xfe\x40\xab\x55\x4d\x52\x4f\xf5\xb5\xcd\xc1\x60\x3a\xee\x5e\xcb\x2f\xc7\xe8\x32\x6c\xdc\x35\x1d\xaa\xa6\xc5\xea\xa2\x56\x40\x72\x87\x62\xd0\xc3\x5d\xdc\x3f\x43\xc7\x6c\x0f\x7b\x69\x87\xbc\x7a\x43\x63\x70\xfe\x00\x7b\xfc\xc8\xf3\x62\xfb\xe6\xb0\xd6\xaf\x23\x23\xc2\x06\xdd\xe0\x11\xa3\x80\xce\x6e\xc1\xe2\xfb\xf7\xe5\x5d\x24\x3f\x09\x57\xcb\x65\x88\xfb\x59\x18\xa2\x21\xf5\x1e\xfd\x0f\xf9\xf2\x39\xf3\xe7\xd8\x0e\xbf\x54\x3d\xba\x13\x81\x49\xc6\x8d\x0b\xcf\x4e\xbf\x03\x00\x00\xff\xff\xb6\x2f\xe1\x6f\xe7\x07\x00\x00")

func builtinToolDataGrafanaConfMetricsMemoryPanelJsonBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGrafanaConfMetricsMemoryPanelJson,
		"builtin/tool/data/grafana/conf/metrics/memory/panel.json",
	)
}

func builtinToolDataGrafanaConfMetricsMemoryPanelJson() (*asset, error) {
	bytes, err := builtinToolDataGrafanaConfMetricsMemoryPanelJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/grafana/conf/metrics/memory/panel.json", size: 2023, mode: os.FileMode(420), modTime: time.Unix(1472745366, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGrafanaPortsYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x55\x30\x36\x30\x30\x00\x04\x00\x00\xff\xff\xcf\x2c\x5b\xf4\x06\x00\x00\x00")

func builtinToolDataGrafanaPortsYmlBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGrafanaPortsYml,
		"builtin/tool/data/grafana/ports.yml",
	)
}

func builtinToolDataGrafanaPortsYml() (*asset, error) {
	bytes, err := builtinToolDataGrafanaPortsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/grafana/ports.yml", size: 6, mode: os.FileMode(420), modTime: time.Unix(1472240905, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGrafanaRunSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x56\xef\x6f\xda\x48\x10\xfd\xee\xbf\x62\xe2\xa0\x4b\xab\xab\x59\xa4\x53\x4f\x27\x22\xaa\xa2\x04\x28\x3a\x54\xa2\x40\xd5\x3b\xe5\x22\xb4\xac\xd7\xf6\x5e\xec\x5d\x6b\x77\x9d\x96\x8b\xb8\xbf\xfd\xc6\xbf\xb0\x81\x23\xa9\xfa\xa1\xfe\x60\xcc\xf2\xde\xcc\x7b\xb3\x9e\x61\xcf\xcf\xc8\x5a\x48\xb2\xa6\x26\x02\x8f\x3b\xe7\x30\xd6\x2a\x01\x15\x04\x82\x09\x1a\x43\xa8\x69\x40\x25\x05\x5f\xb1\x07\xae\x41\x24\x34\xe4\x10\x59\x9b\x9a\x3e\x21\xa1\xb0\x51\xb6\xee\x32\x95\x90\x0a\x57\x7f\x7a\x25\xde\xe9\x83\xdb\x79\x9a\x8c\x57\x37\xc3\xe5\x87\xc5\xea\x7a\xb8\x1c\xf6\x07\xe4\x91\x6a\x12\x8b\x75\x8d\xdd\xba\x07\xb0\xd9\x7c\xb2\xa8\x61\x2a\x3c\x09\xbb\x99\x7d\x9a\x4c\x3f\x2e\x8e\x03\x92\x34\xce\x42\x21\x0d\x32\x1c\x16\xa9\x2f\x12\xbc\xdb\xda\x48\xbf\x36\xe4\x76\xf6\x64\xb9\xed\x85\x5c\x80\x7b\x9a\x4a\xb8\x65\x75\x2e\xc7\x11\x01\xdc\xc1\x19\x78\xff\x40\xa1\x6d\xf8\x19\x95\xdd\xce\xc7\xd3\xd9\x68\xf1\xf3\xd7\x2d\xdc\x5f\x82\x8d\xb8\x74\x00\xaf\xe4\xc1\x17\x1a\xbc\x14\xfe\xad\x95\x76\xe9\x17\x43\x8a\xdf\xac\xca\x58\x74\xf0\x03\xd3\xdc\xe7\xd2\xe2\x3e\x18\xa7\x00\x05\x4a\x43\xaa\x55\x20\x62\x0e\x42\x1e\x27\xdc\x5e\xe2\x46\x15\xc8\xfc\xa2\x8c\x71\x63\x56\x0f\x7c\xb3\xc2\x0a\x49\x9a\xf0\x81\x5b\x11\x3a\x4f\x55\x98\xed\x6a\x78\x75\x35\x5a\x2c\x56\xbf\x8f\xfe\x5c\x4d\xaf\xdd\x1d\xd9\x70\xcc\x6e\x5f\x22\x2f\x46\x57\xb7\xa3\x65\x2b\x46\x13\x40\xf3\x50\x28\xf9\x1c\xf9\x76\x34\x99\xce\x3f\xba\xce\x8e\xd2\x94\x12\xf7\xf9\xec\x58\xfe\xd6\x05\x8f\x36\x80\x63\x89\x08\x68\xd7\xbb\xbe\x38\x6e\x25\xb8\x77\x4d\xea\x7b\x17\xde\xbd\x7b\xa6\xd8\xc7\x64\x44\xac\x5a\x82\x84\x0f\x03\x38\xa5\xf1\x3b\x42\x57\x56\x9a\x70\x65\xf8\xff\x75\xf8\xcd\xe1\xf7\xcb\xb9\xbf\x1f\x27\x2a\xd5\xa8\x2a\xe1\xa5\x8c\x23\xea\x37\x4b\x08\x84\x73\xf0\xe8\x2b\xc9\xcb\x1d\x2f\xfb\xeb\xb0\xb9\xb0\xdf\xf6\x42\x57\xd0\x44\xf9\xf0\x6b\xaf\xf7\x4c\x5a\x8c\x7f\xd8\x8b\x38\x1d\x96\xc3\xd9\xac\x9e\x14\xed\x66\x9c\xcf\xae\xa7\xe3\xc5\xa0\x83\x37\xfc\x96\x3f\x5e\xbc\xb9\x70\xaa\x0e\x2b\xc6\xc7\xae\xc1\x0e\xa3\xec\x7a\xac\x9e\x75\x2c\x16\x15\xc7\x20\xc9\x58\x1a\xc7\xc8\x2c\x57\xb6\x4e\x65\xb9\x4c\xd2\x29\xf3\x16\x62\xcf\xe1\x4e\x25\x52\xd0\x7b\x58\x53\xf6\x10\x6a\x95\x49\x3f\xef\xee\xfc\x15\xc0\x71\x00\x4c\xc9\x40\x84\x99\xe6\x75\x22\x67\xb7\xf2\xea\x35\x3c\x39\xcd\x5e\x7d\xa6\xc2\x0a\x19\x16\xe2\x27\x55\x1d\x31\xc0\x9a\x63\x13\x52\x7f\xd3\xed\x76\xcb\xb6\xcc\xb0\x54\x28\xed\x15\xcb\x74\x0c\x9e\xa7\x32\x9b\x66\x16\x88\xcf\x1f\x89\xcc\xe2\x7c\xc9\x60\x77\x48\x8b\x0f\x01\x45\x64\x3e\xe7\x71\xcc\x53\x3f\x11\xb2\x5f\xdc\xdf\xc7\x8a\xd1\x38\x52\xc6\xf6\x7f\xe9\xf5\x7a\xaf\xf7\xe6\x4d\x29\xa6\x16\x20\x0c\x48\x65\x4b\x05\xb0\xe1\xf6\x0d\x3e\x5a\xbd\xc9\x75\xd6\x3e\xa8\xcd\x5f\x31\xac\xf3\xdb\x7c\xdc\x28\xe9\x9b\xd6\xfc\x89\x39\x4f\xe1\x6d\xf3\xce\x34\x19\xae\x2a\x7a\x1e\xaa\xce\xe6\x53\x4b\x8d\xca\x34\x16\x6f\x67\xb7\xb0\xf9\xa2\x07\x42\x53\x41\x5a\x74\xf8\x6b\xa7\xc1\xfb\x03\x6e\xe6\x8b\x65\x7b\xe5\x03\x5c\x60\x7a\x8b\x45\xf2\x96\x9b\x94\xf7\x81\xa6\x69\x2c\x58\xe1\x84\xfc\x6d\x94\xbc\x64\x11\xd5\x86\xdb\xc1\xa7\xe5\xd8\xfb\xed\xa2\xcd\xf5\xf2\x2c\x1e\xfe\xdb\x52\xbd\x81\xf7\x24\xaf\x02\xde\x92\x04\x99\x6d\xf9\x79\x94\x17\xdd\x9a\x68\xad\xa8\xf6\xbf\xcf\x6b\x45\x36\xc4\x5f\xff\x58\xb7\x09\xd7\x21\xf7\x57\x8d\xfc\xc2\xeb\xb6\x79\xb1\xe1\x27\xc7\xe1\x5f\x39\x83\x50\x99\x6c\x77\xf8\x20\x99\xd1\xc4\xe4\xc7\x94\xba\xe5\x0c\xd7\x8f\x78\x1c\x29\xf2\x79\x5e\xa4\x12\x9e\x52\x1b\x0d\x4a\x20\x4a\xe2\x35\x72\x6f\xb2\x95\xe8\x32\xd9\xa0\xfd\x2f\x5e\x7f\x76\x85\x14\x7b\x68\x16\x84\x7d\x9f\x07\x34\x8b\x6d\x37\xcf\x60\xba\xb9\xab\xc1\xd1\xe1\xe1\x14\x1a\xcf\x2f\x66\x70\x78\xb2\x38\x89\xae\x86\x48\x9b\x50\x0d\x1d\xf7\xbf\x00\x00\x00\xff\xff\x89\x6a\x82\xb7\xa7\x09\x00\x00")

func builtinToolDataGrafanaRunShBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGrafanaRunSh,
		"builtin/tool/data/grafana/run.sh",
	)
}

func builtinToolDataGrafanaRunSh() (*asset, error) {
	bytes, err := builtinToolDataGrafanaRunShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/grafana/run.sh", size: 2471, mode: os.FileMode(420), modTime: time.Unix(1472817942, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGrafanaSetupSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\x5d\x4f\xdb\x30\x14\x7d\xf7\xaf\xb8\x83\x4a\x50\x21\xc7\x54\x54\x43\x9b\x54\xa4\xa0\x96\x0d\x89\x95\xa9\x4c\x7b\x61\xa8\x72\xec\x9b\xd4\xe0\x8f\xcc\x76\x56\xd8\xc7\x7f\x9f\x93\xa6\xdd\x06\xcb\x8b\x95\x73\x3f\xcf\x39\x77\xff\x15\x2b\x94\x65\x05\x0f\x2b\x12\x30\x02\x45\xb2\x0f\x17\xde\x19\x70\x65\xa9\x84\xe2\x1a\x2a\xcf\x4b\x6e\x39\x48\x27\x1e\xd0\x83\x32\xbc\x42\x58\xc5\x58\x87\xb7\x8c\x55\x2a\xae\x9a\x22\x13\xce\xb0\x3e\x6f\xfb\xd2\x4d\x3e\x21\xf8\x58\x3b\x1f\x61\x3a\x3b\xbf\xcc\xe7\xcb\x8b\xc5\xf5\xfc\xd3\x6c\x3e\x9d\x58\x67\x95\x8d\xe8\xb9\x88\xea\x1b\x92\x77\x8b\xfc\x22\x9f\xe7\xcb\xcf\xb3\xc5\xcd\xe5\xf5\x7c\x72\x92\x8d\xb2\x11\x1d\x8d\x4f\x8f\x8f\xc7\xa7\xa3\xf1\x1b\x42\x78\x1d\x69\x95\x56\x6c\x6a\xc9\x23\xee\x7e\xe9\x13\x50\x6a\x1d\x55\x36\x44\xae\x35\xf5\x98\x96\x31\x68\x65\x80\x1e\x82\x2f\x04\xd2\xa7\x55\x51\x3a\x1b\x85\xb3\xa5\xaa\x7a\x4c\x34\x7e\x1b\x16\x9c\x0a\xf4\x51\x25\xd6\xa9\x7d\xe8\xd1\xfb\xaf\xb0\x0f\x16\x51\xa2\x84\xe2\x09\x9c\xb1\x8a\xef\x46\x0b\x8d\xdc\x92\xae\xc7\x4e\x8f\x0d\x79\x8f\x3a\x0b\x27\x19\x37\xfc\xbb\xb3\x7c\x1d\x3a\x81\x8a\x46\x69\x19\xb6\x29\xcb\xc1\x8f\x67\x9c\x7f\x2d\xb9\x91\xaf\xc7\x99\xc4\x02\xce\x80\x45\x53\x6f\x73\x5b\x88\xc8\xfa\xa1\x02\xaa\x5e\x06\xbc\x79\x89\x75\x4b\xd1\xab\xff\xf9\x14\x15\x4f\xda\xb3\xca\x85\x86\xa5\x3d\x91\x07\x0c\x4c\xba\xb5\xd5\x8e\x4b\x36\xca\x4e\xbb\x10\xed\x76\x69\xf7\x68\x82\x67\xa1\x3d\x92\x16\x26\x62\x65\x9c\x84\xa3\xc7\xe7\x78\x3a\x9b\xdb\x4e\x9d\x3b\xf8\x80\xbe\x52\xb6\x02\x99\x8e\xaa\x70\xdc\x4b\xa8\xb9\x45\x1d\xc8\xc7\x7c\x3e\xbb\xba\x99\x0c\x0e\x4b\x65\x25\xb0\xd6\x09\x66\x30\x7a\x25\x02\xd0\xf8\x54\x23\x94\x40\x2d\x37\x08\x07\x5d\x45\x76\x1f\x9c\x3d\x18\x92\x69\x7e\xf3\xfe\xfc\x3a\x5f\x4c\x53\x69\x32\xa7\xaf\x6c\x6d\x4e\x3c\x76\x53\xba\xec\x21\x29\x9d\xdf\xcc\x4b\xf6\xc3\x60\x33\x92\x48\xd7\xb9\xf9\x77\x23\x14\x2b\x07\x83\x1d\x02\x3f\x5b\xaf\x29\x0d\xba\xf1\x75\xa9\x34\xf6\x4d\x06\x9b\xe7\xe0\x30\xfb\x33\xc8\xbb\x75\xb8\xbd\x4b\x15\x21\xc9\x27\xe2\x61\x16\x55\xd4\x38\x99\xec\x4d\xb1\xe4\x8d\x8e\xb0\x70\xeb\xbd\x61\x8a\x67\x1b\xe2\x43\x38\x9a\xf4\x8d\x12\x1b\xe9\x2c\x92\xe7\xd3\xcf\x76\x72\xf8\x0a\xe5\xf2\x5f\x52\xbf\x03\x00\x00\xff\xff\x49\x57\x18\xf0\xa5\x03\x00\x00")

func builtinToolDataGrafanaSetupShBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGrafanaSetupSh,
		"builtin/tool/data/grafana/setup.sh",
	)
}

func builtinToolDataGrafanaSetupSh() (*asset, error) {
	bytes, err := builtinToolDataGrafanaSetupShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/grafana/setup.sh", size: 933, mode: os.FileMode(420), modTime: time.Unix(1472657609, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGraphiteConfCommonCarbonConf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\xef\x6a\xf2\x30\x18\xc5\xbf\xe7\x2a\xbc\x80\xf7\x5d\xdb\x4c\x10\x0a\xfb\x90\xa5\x8f\x1a\xd6\x35\x5d\x1a\x07\x32\x24\xc4\x12\x6c\x41\xaa\xa4\x75\x63\x77\xbf\xb4\xce\x7f\xd3\x6e\xfa\xed\x3c\xbf\xe7\xf4\xe4\x24\x6f\xb9\xce\x0b\xb3\x40\x99\xe4\x82\x4c\x40\x45\x4c\x0c\xdc\xef\x61\xe0\xbd\x6b\xeb\xad\xcb\xa5\xb7\xb2\x7a\x5b\x94\x8d\xf1\x10\xe5\xc9\xf8\x00\xec\x19\xd3\xe4\x5e\xae\xed\x72\x53\x79\x28\xe6\x93\xb3\xe1\xd1\x61\xb3\x3a\x12\x29\x8b\x6e\x10\x76\xd7\x2d\x53\x12\xab\x88\x48\xd2\x11\xb7\x3e\xff\x51\x94\xf5\xd6\x58\x0f\xcd\x32\x68\x09\x75\x98\x20\x48\xc8\x63\x0c\xca\x05\x10\x5c\x12\xc9\x78\xe2\xc6\xd2\xee\x0c\x8a\x59\x02\x4a\x00\x05\xf6\x0a\x42\xb1\x44\x82\x18\x13\x0a\x6e\x1c\xe0\xd1\x9d\xef\xfe\x81\x4b\x45\x9f\xe2\x3f\x29\x4a\xe8\x14\xd4\xcb\x0c\xc4\xbc\x87\x68\xcf\x3f\x4b\xdd\x11\x20\x73\xfa\x58\xaf\x6b\xd3\x69\xfb\xcd\x29\x93\x27\x19\xed\x5b\x0f\x83\xc5\x8f\x84\x29\x17\xd2\x51\xd8\x0f\xee\xaf\x72\x9d\x66\xc3\x8b\x34\xdf\xfa\xc8\x0f\xf0\xd1\x18\xf7\x1a\xe3\x5f\x8c\x71\x8f\x31\x6e\x8d\xad\x59\xeb\xcf\xc5\x75\xf9\xfd\x15\xfb\x5d\x31\x7e\x5f\x12\xff\x3a\xc9\xad\xed\xde\xb4\xfe\x10\x09\x88\xc9\x5c\x3d\x83\x9c\xf2\xc8\x69\xf9\xa6\xaa\xcb\xba\x31\x55\xf3\xbf\xd0\x75\x51\x56\x2b\x47\xa4\x31\xa3\xdd\x9b\x50\xce\xd8\x3d\xf2\xf6\xce\x50\x04\x99\x64\x49\x27\x67\xe7\x97\x18\xb6\xed\x86\xc1\xbf\x0b\x05\x0f\x43\xfc\x15\x00\x00\xff\xff\xa2\xe0\x5f\xb2\x27\x03\x00\x00")

func builtinToolDataGraphiteConfCommonCarbonConfBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGraphiteConfCommonCarbonConf,
		"builtin/tool/data/graphite/conf/common/carbon.conf",
	)
}

func builtinToolDataGraphiteConfCommonCarbonConf() (*asset, error) {
	bytes, err := builtinToolDataGraphiteConfCommonCarbonConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/graphite/conf/common/carbon.conf", size: 807, mode: os.FileMode(420), modTime: time.Unix(1472803817, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGraphiteConfCommonGraphiteApiYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\xc1\x4a\xc4\x30\x10\x86\xef\x7d\x8a\xbc\x80\xe9\xb6\x20\x0b\xb9\x0a\x7b\x16\x54\x3c\x86\xd9\x74\x62\x06\x6a\x12\x26\x59\x75\x7d\x7a\x33\xdb\x56\x05\x17\xc9\x61\xf8\xff\xf9\xe6\xcf\x24\x05\x81\x5d\xb0\x14\x27\xfc\x30\xaa\x7f\x03\xee\x67\x3a\xf6\x2f\x0c\x39\x50\xc5\x1e\x32\xd9\xdf\x4c\xe7\xa5\x70\x31\x9d\x52\x37\x6a\xc3\x6c\xc3\xf4\xda\xd1\xef\x81\x4a\x46\xd6\xcf\x4b\x3d\x5c\xec\xce\x9f\xa2\xab\x94\xe2\xd5\xc9\xad\xa7\x1f\x90\x09\xcb\x61\xd3\xff\xa1\xf7\x84\x3f\xdc\x7a\xa7\x64\x4f\xc4\xe8\x6a\x92\x1c\x91\x92\xf0\xf7\x59\x2b\xdf\x39\xe0\x63\x8a\xc2\x85\x54\xea\xf7\xc0\x30\xee\xf5\xae\x9d\xc1\xec\x77\xc3\x78\xc5\x1c\xc5\xac\xf4\x8a\xe9\x54\x8d\x1a\x9a\x60\xac\x7c\xb6\x13\xce\x70\x6e\xc6\x6d\x73\x96\x6c\x9b\x19\x3d\xb5\xbf\x5d\xe4\x85\xcc\x33\x39\x90\xc5\xad\x07\x59\x55\x12\x24\xcc\x7e\xa6\x88\x46\x3d\x3d\xde\x7d\x05\x00\x00\xff\xff\xaa\xe3\x7f\x1b\x97\x01\x00\x00")

func builtinToolDataGraphiteConfCommonGraphiteApiYamlBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGraphiteConfCommonGraphiteApiYaml,
		"builtin/tool/data/graphite/conf/common/graphite-api.yaml",
	)
}

func builtinToolDataGraphiteConfCommonGraphiteApiYaml() (*asset, error) {
	bytes, err := builtinToolDataGraphiteConfCommonGraphiteApiYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/graphite/conf/common/graphite-api.yaml", size: 407, mode: os.FileMode(420), modTime: time.Unix(1472804755, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGraphiteConfCommonStorageAggregationConf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func builtinToolDataGraphiteConfCommonStorageAggregationConfBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGraphiteConfCommonStorageAggregationConf,
		"builtin/tool/data/graphite/conf/common/storage-aggregation.conf",
	)
}

func builtinToolDataGraphiteConfCommonStorageAggregationConf() (*asset, error) {
	bytes, err := builtinToolDataGraphiteConfCommonStorageAggregationConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/graphite/conf/common/storage-aggregation.conf", size: 0, mode: os.FileMode(420), modTime: time.Unix(1472804087, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGraphiteConfCommonStorageSchemasConf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8a\x4e\x4e\x2c\x4a\xca\xcf\x8b\xe5\x2a\x48\x2c\x29\x49\x2d\xca\x53\xb0\x55\x88\x83\x08\xc5\xe8\x71\x15\xa5\x96\xa4\xe6\x95\x64\xe6\xe7\x15\x03\x85\xcd\x0c\xac\x2c\x0d\x52\xb8\xb8\xa2\x53\x52\xd3\x12\x4b\x73\x4a\x90\xb5\xe8\x69\xa1\xaa\x35\x2c\xb6\x32\x32\xc9\xd0\x51\x30\x34\x28\xb6\x32\x4f\x01\xd2\xb9\x56\xc6\x06\x20\xda\x20\xd7\xca\xa8\x12\x10\x00\x00\xff\xff\x33\xb1\x12\x4a\x74\x00\x00\x00")

func builtinToolDataGraphiteConfCommonStorageSchemasConfBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGraphiteConfCommonStorageSchemasConf,
		"builtin/tool/data/graphite/conf/common/storage-schemas.conf",
	)
}

func builtinToolDataGraphiteConfCommonStorageSchemasConf() (*asset, error) {
	bytes, err := builtinToolDataGraphiteConfCommonStorageSchemasConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/graphite/conf/common/storage-schemas.conf", size: 116, mode: os.FileMode(420), modTime: time.Unix(1472738545, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGraphiteConfCommonSupervisordConf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x90\x41\x6b\x84\x30\x10\x85\xef\xfe\x8a\x5c\x0a\xed\x21\xa6\x7a\x2a\x82\xbf\x64\x59\x64\x4c\x66\xdd\x80\x26\x61\x92\x58\xfa\xef\x3b\xb1\x96\x6e\x0f\x2d\xa5\xec\x61\x57\xd1\x10\xe6\xbd\x97\xbc\xef\x10\x73\x40\x5a\x6d\xf4\x64\x8e\x95\xf3\x06\x70\xf1\x4e\xf4\x22\x51\xc6\xaa\x3a\x04\xf2\x13\xc1\xd2\x69\xa0\xd1\x3b\x49\x38\xc3\x9b\x6c\x8e\x95\xf6\xcb\x02\xce\xb0\x50\xe5\x48\x6a\xb4\x4e\x5d\x4a\x84\x94\xda\xbb\x93\x9d\x7a\x85\x49\xef\xa3\x7d\xa9\xcb\x84\x05\xd6\xc5\x04\x4e\x63\xdf\xf0\xc6\xe0\x98\x27\x5e\x83\x35\x27\x3b\x63\xaf\x56\x20\x45\xf9\x7b\xaa\x6c\x6a\x9e\x0b\xb6\x51\xaa\x62\x32\x3e\xa7\x61\xf6\x53\x31\x94\x8b\x14\x0b\x6f\xd5\x57\x25\xf5\xf0\xb8\x17\x18\x1c\x2c\xf8\x14\x6b\x9e\x17\x27\x12\xfd\xc7\x09\x39\x79\xc2\xed\xfc\x1f\x11\x69\xd0\x67\xfc\x1d\xd1\x26\xb9\x3a\xa2\xfd\xe0\xbb\x41\xd4\x5e\x17\x51\xfb\x67\x44\xed\x2d\x23\xe2\x5f\x38\xdb\x84\x12\x82\xbd\x04\x34\x65\x67\xb5\x27\x27\xe4\x28\x9e\xeb\xed\xed\x5e\xf8\x11\xf2\x55\x94\xea\x1c\x2c\x67\x5c\x71\x16\x1f\x10\x3e\x73\x06\xce\xa9\x21\x84\x8e\xbf\x1b\x69\xfb\x1e\x00\x00\xff\xff\x5c\x33\xd5\x30\x74\x04\x00\x00")

func builtinToolDataGraphiteConfCommonSupervisordConfBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGraphiteConfCommonSupervisordConf,
		"builtin/tool/data/graphite/conf/common/supervisord.conf",
	)
}

func builtinToolDataGraphiteConfCommonSupervisordConf() (*asset, error) {
	bytes, err := builtinToolDataGraphiteConfCommonSupervisordConfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/graphite/conf/common/supervisord.conf", size: 1140, mode: os.FileMode(420), modTime: time.Unix(1472817704, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGraphitePortsYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x55\xb0\x00\x02\x2e\x5d\x05\x23\x03\x03\x63\x08\x65\x02\x08\x00\x00\xff\xff\xe7\x1d\x65\xe2\x14\x00\x00\x00")

func builtinToolDataGraphitePortsYmlBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGraphitePortsYml,
		"builtin/tool/data/graphite/ports.yml",
	)
}

func builtinToolDataGraphitePortsYml() (*asset, error) {
	bytes, err := builtinToolDataGraphitePortsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/graphite/ports.yml", size: 20, mode: os.FileMode(420), modTime: time.Unix(1472808745, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGraphiteRunSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\xd2\x2f\x2d\x2e\x02\x73\x8b\x4b\x0b\x52\x8b\xca\x32\x8b\xf3\x8b\x52\x14\x74\x93\x15\xf4\x53\x4b\x92\x91\xc4\x90\xa5\xf5\x92\xf3\xf3\xd2\x00\x01\x00\x00\xff\xff\x66\xa9\xfa\xb2\x45\x00\x00\x00")

func builtinToolDataGraphiteRunShBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGraphiteRunSh,
		"builtin/tool/data/graphite/run.sh",
	)
}

func builtinToolDataGraphiteRunSh() (*asset, error) {
	bytes, err := builtinToolDataGraphiteRunShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/graphite/run.sh", size: 69, mode: os.FileMode(420), modTime: time.Unix(1472739832, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataGraphiteSetupSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x91\x31\x4f\xc3\x30\x10\x85\x77\xff\x0a\xa3\xae\xb8\x91\xd8\x19\x8a\x5a\x50\x97\x82\x80\x0d\x10\xba\xd8\x57\xe7\xa4\xc4\xb6\xec\x4b\x44\xfe\x3d\x4e\x1b\x35\x29\x2d\x19\x2c\xf9\xbb\xf7\x5e\x9e\xce\x8b\x9b\xa2\x24\x57\x94\x90\x2a\x91\x90\xa5\x42\x21\xf0\x27\xf8\xc8\x72\xbd\x79\xd8\xae\x76\xdf\x8f\xaf\xcf\xbb\xf7\xcd\x6e\x7d\xef\xbc\x23\xc7\x18\x41\x33\x75\x59\x06\x81\x95\xcd\x96\x36\x18\x60\x3c\x5d\xc9\x25\x86\xba\x96\xaa\x97\x9f\x42\xe6\xcf\x46\x08\x15\x31\x2a\x0d\xb1\xf4\x6e\xa4\xa9\x0d\x18\x3b\x4a\x3e\x8e\xa0\x6c\xa9\x36\x0a\x53\x42\xc7\x04\xf5\x48\x43\xcf\x95\x77\xca\x60\x37\x82\x9a\xca\xfd\x9e\xce\x81\x06\x8a\xfe\x6e\xc6\x46\x57\xa0\x20\x44\x3e\xa6\x4e\xaa\x0d\xb9\x8e\x41\x39\x8c\xe6\x13\xdb\x3a\xd2\x3e\xba\xa9\x2d\x04\xfa\x18\xba\xc4\xfe\x56\xf7\xe0\x32\xfa\x12\x42\x1b\x59\x68\xef\xf6\xf9\x68\x1a\xef\x84\x58\xc8\xa7\xd1\x20\x57\x2f\x5b\xd1\x74\x67\x01\xcb\x1e\x9a\x5a\x16\xc8\xba\xb8\xc0\x73\xef\xe0\x3b\x6e\x67\x39\xa4\x1f\x1d\x47\x50\xcc\xf8\x20\x4b\xec\x23\x58\x54\x49\x57\xd8\x40\xba\xd4\x5f\x13\xcc\x8d\x60\x6d\x44\x0b\x4c\xd7\x7e\xf6\x9f\x68\x28\xfb\x76\x7a\x31\x73\xc8\x9b\xae\xb3\x9c\x89\x1e\xf6\xb4\x34\xc5\x5f\xdd\x6f\x00\x00\x00\xff\xff\x02\x36\x16\x04\x72\x02\x00\x00")

func builtinToolDataGraphiteSetupShBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataGraphiteSetupSh,
		"builtin/tool/data/graphite/setup.sh",
	)
}

func builtinToolDataGraphiteSetupSh() (*asset, error) {
	bytes, err := builtinToolDataGraphiteSetupShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/graphite/setup.sh", size: 626, mode: os.FileMode(420), modTime: time.Unix(1472815697, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataPromCollectdExporterPortsYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x55\xb0\x34\x34\x30\xe6\xd2\x55\x30\x32\xb5\x30\x32\x03\x04\x00\x00\xff\xff\xc0\x0b\xd0\x2b\x0e\x00\x00\x00")

func builtinToolDataPromCollectdExporterPortsYmlBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataPromCollectdExporterPortsYml,
		"builtin/tool/data/prom-collectd-exporter/ports.yml",
	)
}

func builtinToolDataPromCollectdExporterPortsYml() (*asset, error) {
	bytes, err := builtinToolDataPromCollectdExporterPortsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/prom-collectd-exporter/ports.yml", size: 14, mode: os.FileMode(420), modTime: time.Unix(1472555502, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataPromCollectdExporterRunSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\x02\x33\x93\xf3\x73\x72\x52\x93\x4b\x52\xe2\x53\x2b\x0a\xf2\x8b\x4a\x52\x8b\x14\x74\x61\x42\x7a\x39\x99\xc5\x25\xa9\x79\xba\x89\x29\x29\x45\xa9\xc5\xc5\xb6\x4a\x56\x46\xa6\x16\x46\x66\x4a\x80\x00\x00\x00\xff\xff\xc8\x5e\xa5\x3e\x45\x00\x00\x00")

func builtinToolDataPromCollectdExporterRunShBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataPromCollectdExporterRunSh,
		"builtin/tool/data/prom-collectd-exporter/run.sh",
	)
}

func builtinToolDataPromCollectdExporterRunSh() (*asset, error) {
	bytes, err := builtinToolDataPromCollectdExporterRunShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/prom-collectd-exporter/run.sh", size: 69, mode: os.FileMode(420), modTime: time.Unix(1472559306, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataPromCollectdExporterSetupSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x51\x4d\x4b\x33\x31\x10\xbe\xcf\xaf\xc8\xcb\xeb\x4d\x92\x28\x8a\x07\xa1\x07\xa5\x15\x7a\xd9\x85\x2a\x9e\x84\x92\x4d\xc6\xdd\x40\xbe\x48\x66\xdb\xb5\xe2\x7f\x77\xab\x8b\x1e\x96\x82\xb9\x84\x79\xbe\xf2\x84\xf9\xff\x4f\x36\x36\xc8\x46\x95\x0e\x0a\x12\xe3\x08\x80\x43\x8a\x99\xd8\x72\x75\xbf\xbe\xab\xb6\x0f\x9b\xba\x7a\x5a\x55\xcb\x45\x88\xc1\x06\xc2\xac\x34\xd9\x1d\xc2\xf3\x6a\xf3\xb8\xae\xab\xc5\x85\xb8\x12\x97\x00\x2a\x11\x6f\xc7\x80\x3e\x19\x45\xf8\x33\xda\x50\x48\x39\xc7\xf8\x1b\x7b\x01\x36\x9e\xfd\x88\x02\x68\xc3\x24\xf9\x04\xc7\x89\xf1\x9a\xe9\xe8\x1c\x6a\x32\xdb\xef\xb7\x31\x0b\x52\x59\xb4\x87\xc9\xd4\x11\xa5\x72\x2b\x65\x6b\xa9\xeb\x1b\xa1\xa3\x97\x29\x47\x8f\xd4\x61\x5f\xe4\xcc\x2c\x33\x3a\x54\x05\x8b\x34\x71\x1f\x5c\x54\x46\x9e\xbd\x4f\x7d\x3f\xe6\x72\xfe\x4b\x0a\x67\x43\x3f\x70\xe5\xcd\xcd\xf5\x54\x01\xc6\x8b\xf1\xc3\xf0\x7a\xb2\xe4\xf1\x37\x7f\x0d\x05\xbf\x9b\x6b\xd9\xd7\x0e\x66\x30\xe8\xce\x47\xc3\xce\x87\x13\xfc\x67\x00\x00\x00\xff\xff\x88\x77\x19\x73\xbc\x01\x00\x00")

func builtinToolDataPromCollectdExporterSetupShBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataPromCollectdExporterSetupSh,
		"builtin/tool/data/prom-collectd-exporter/setup.sh",
	)
}

func builtinToolDataPromCollectdExporterSetupSh() (*asset, error) {
	bytes, err := builtinToolDataPromCollectdExporterSetupShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/prom-collectd-exporter/setup.sh", size: 444, mode: os.FileMode(420), modTime: time.Unix(1472593753, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataPrometheusConfCommonPrometheusYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x8e\xd1\x4a\xf4\x30\x10\x85\xef\xfb\x14\x87\xfd\x59\x7a\x95\x9f\x8a\x78\xd1\x3c\x83\x6f\x20\xb2\x64\xb3\xd3\x6e\x34\xcd\x94\xcc\xac\x08\xe2\xbb\x3b\x11\x8b\x8b\x78\xe1\xdc\x4d\x4e\xce\x7c\xdf\x9c\xf9\x18\xb2\xef\x00\x89\x35\xac\x74\x48\x45\xa9\xbe\xd8\x13\xda\xdc\x89\x25\x64\xeb\x25\x68\xe2\x72\x95\x5a\xd2\x7d\x55\x22\x97\x29\xcd\xd2\x8e\x38\x3c\xf1\xf1\x50\xc2\x42\x1e\xfd\x5a\x79\x21\x3d\xd3\x45\x7a\xfc\xc3\xf7\x86\x85\x4b\x52\xae\x82\xa4\x42\x79\xea\x1a\x49\xd4\x08\xf1\xfa\x56\x1b\x07\x0d\x75\x26\x15\x8f\x87\x3e\x73\x0c\xf9\xcc\xa2\x7e\x1c\xc6\xa1\x7f\xec\xde\xf6\x0e\x69\x82\x75\x34\xa4\x22\xf8\x7f\x9f\xca\xb3\x60\xd7\x50\x2e\x72\xce\x14\xf5\xe4\xe8\x75\xe5\x6a\xda\x3b\xec\xdf\x7f\x2a\x6e\x9f\x9a\xa0\xc4\xb0\xa6\x32\x63\xb2\x36\xb6\x00\x5b\xfb\xaf\x92\xbf\xb3\xfd\x78\x33\xdc\x7e\x1a\x83\xca\xc9\x44\x3e\x02\x00\x00\xff\xff\x63\x7c\xbd\x4e\x78\x01\x00\x00")

func builtinToolDataPrometheusConfCommonPrometheusYmlBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataPrometheusConfCommonPrometheusYml,
		"builtin/tool/data/prometheus/conf/common/prometheus.yml",
	)
}

func builtinToolDataPrometheusConfCommonPrometheusYml() (*asset, error) {
	bytes, err := builtinToolDataPrometheusConfCommonPrometheusYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/prometheus/conf/common/prometheus.yml", size: 376, mode: os.FileMode(420), modTime: time.Unix(1472726698, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataPrometheusPortsYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x55\xb0\x34\xb0\x34\x00\x04\x00\x00\xff\xff\xe2\x77\x24\x4a\x06\x00\x00\x00")

func builtinToolDataPrometheusPortsYmlBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataPrometheusPortsYml,
		"builtin/tool/data/prometheus/ports.yml",
	)
}

func builtinToolDataPrometheusPortsYml() (*asset, error) {
	bytes, err := builtinToolDataPrometheusPortsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/prometheus/ports.yml", size: 6, mode: os.FileMode(420), modTime: time.Unix(1472551962, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataPrometheusRunSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\x02\x33\x0b\x8a\xf2\x73\x53\x4b\x32\x52\x4b\x8b\x15\x74\x93\xf3\xf3\xd2\x32\xd3\xf5\xd2\x32\x73\x52\x6d\xf5\x41\x1c\x20\x91\x9b\x9b\x8f\xac\x48\xaf\x32\x37\x07\x10\x00\x00\xff\xff\x8f\x6f\xd9\x61\x45\x00\x00\x00")

func builtinToolDataPrometheusRunShBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataPrometheusRunSh,
		"builtin/tool/data/prometheus/run.sh",
	)
}

func builtinToolDataPrometheusRunSh() (*asset, error) {
	bytes, err := builtinToolDataPrometheusRunShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/prometheus/run.sh", size: 69, mode: os.FileMode(420), modTime: time.Unix(1472569277, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataPrometheusSetupSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x90\x4f\x4b\xc4\x30\x10\xc5\xef\xf3\x29\x46\xf4\x26\x49\x54\xc4\x83\xb0\x07\x65\x57\xd8\x4b\x0b\xab\x78\x12\x24\x6d\xc6\x36\xd0\xfc\xa1\x99\x76\xeb\x8a\xdf\xdd\xae\x14\x5b\xf4\x60\x2e\xc9\x7b\xf9\xf1\xe6\x31\xa7\x27\xaa\xb0\x5e\x15\x3a\xd5\x90\x88\x51\x10\x00\x0d\x31\xb4\x8c\xeb\xcd\xfd\xf6\x2e\x7b\x7d\xd8\xe5\xd9\xd3\x26\x5b\xaf\x7c\xf0\xd6\x33\xb5\xba\x64\xdb\x8f\xd8\xf3\x66\xf7\xb8\xcd\xb3\xd5\xa5\xbc\x90\x57\x00\x3a\xb2\xa8\xc6\x84\x2e\x1a\xcd\xf4\x23\xad\x4f\xac\x9b\x06\xc5\x3b\xbe\x00\x8e\x67\x3f\xba\x00\xa5\x41\xc5\x2e\xc2\x51\xa1\xc8\x31\xb6\xc1\x11\xd7\xd4\x25\xc9\xba\x95\xd5\x61\xa2\x6b\xe6\x98\x6e\x95\xaa\x2c\xd7\x5d\x21\xcb\xe0\xd4\x8c\x2e\x9f\x2d\x35\xa4\x13\x25\x65\xc2\xde\x37\x41\x1b\xd5\x9f\x7d\x4c\x15\x3f\x17\xa0\x98\x5d\xd9\x58\xdf\x0d\x42\x3b\x73\x73\x3d\x4d\x85\xf1\x42\x71\x18\xde\xfe\x16\x3a\x56\xfe\x37\x06\x5c\xbf\x80\xf0\x7b\xb7\xb3\x86\xb2\x76\xc1\xe0\xf9\xf0\xfb\xe3\x2b\x00\x00\xff\xff\x69\x54\xe4\x5c\x86\x01\x00\x00")

func builtinToolDataPrometheusSetupShBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataPrometheusSetupSh,
		"builtin/tool/data/prometheus/setup.sh",
	)
}

func builtinToolDataPrometheusSetupSh() (*asset, error) {
	bytes, err := builtinToolDataPrometheusSetupShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/prometheus/setup.sh", size: 390, mode: os.FileMode(420), modTime: time.Unix(1472593758, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataRiemannConfCommonInputClj = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xc1\x8e\xe3\x36\x0c\xbd\xcf\x57\x10\xde\x39\xc8\xdb\x3a\xc1\xec\xde\x02\x6c\xe7\x58\xa0\x40\xef\x05\x92\x34\xd0\xd8\x74\xa2\x1d\xdb\xd2\x4a\xf2\x24\xe9\x64\xfe\xbd\x94\x6c\x39\x89\x2d\xb7\x97\x0d\x10\xc7\x96\xf8\x1e\x1f\x29\x86\x34\x6b\x0c\xc8\xba\x11\x7c\x81\x36\x5f\x88\x46\xb5\xf6\x01\x80\xad\x34\xfe\x68\x85\x46\x58\xe7\x95\xfc\xde\x6a\x5c\x58\x29\x2b\xb3\xa8\xe4\x7e\x2f\x9a\x3d\xd0\x7e\x89\x1a\x56\xbc\xaa\xb6\x64\x7f\xfd\xac\xb5\xc0\x9a\x37\xcd\xc2\x58\x8d\xbc\x36\xff\x61\x19\x98\xc9\xd2\x53\x72\x03\x74\x3b\x63\x74\xe4\xd5\xab\x37\x71\x37\xdb\x34\x7d\x78\x60\x05\x96\x0d\x14\x32\x7f\x45\x9d\x71\x4b\x24\x2f\xad\xc5\xac\xe6\x8a\x18\xd6\xc3\x82\x71\x84\xac\x42\x0b\x6b\xd1\x18\xcb\x9b\x1c\x81\x91\x9f\xa5\x51\x95\xb0\xdd\xad\x46\x55\x71\x5a\xbf\x82\xe0\x53\xf2\xf7\xe2\xf3\x66\xcd\x16\x9f\xd3\xcd\xf6\x31\x81\xe4\xf1\x29\x49\x69\xf5\xd7\x24\xed\x14\x32\x27\x64\xf9\x8a\xe7\xa3\xd4\x85\xf8\x07\x33\xba\x35\xc0\x44\x63\x25\xbc\x7f\x00\x2b\xa5\x86\xb5\xe2\x42\x43\x70\xbb\x05\xc6\x95\xaa\xce\x70\xe0\xe6\xe0\x74\xde\xea\xf0\x96\x9f\x92\x6f\x49\xda\x7d\xe6\xe2\x33\x2e\xb8\xf7\x95\x77\xb6\x56\x55\x4b\xa7\xb1\xbb\x3a\x70\x09\xc2\x37\x6c\xec\x87\x8f\x5a\x94\x99\x0f\xfc\x26\x2e\xa6\x31\x2b\x45\x53\x84\x00\xe9\xeb\xc2\x1b\x31\x85\x18\x6b\xd4\x7b\xec\x18\x81\xc5\x52\x7d\x93\x32\xd2\xec\x30\xde\xf8\xaa\x5f\x71\x6d\x30\xeb\xa1\x06\xf5\x9b\xc8\x31\x3b\x48\x63\x6f\xe3\xb0\x67\x85\xe0\x2e\x83\x80\xb1\xa0\x49\x68\x3e\x2e\xc7\x73\x17\xd1\xe6\xf8\xcb\x66\xf1\x3c\x5c\x13\x2a\xe4\x11\xd1\xa0\x2f\x54\x58\xaf\x09\x58\x2e\x9b\x22\xfb\xcd\x9f\x09\xc1\xbc\xa4\xde\xb6\x7f\x1c\x73\x74\xa6\xc9\x22\x99\xd9\x4f\x43\x16\xb9\x31\x32\xef\xb3\xb8\x0a\xfe\xc2\xef\xca\x07\xe1\x2e\xc3\xa9\x03\x7d\x79\x5b\xd9\x90\xaf\xfe\xcc\x03\x82\xe2\xac\x24\x2f\x96\xfe\xe2\x0a\x94\xce\x8f\xfe\x65\x47\x2d\x2c\x42\xe2\x56\x81\x8a\xf5\xc3\xf9\xbe\x03\x99\x23\x57\x4b\x85\x3a\x27\x1d\xd9\x04\xe7\x76\xe3\xb8\x1a\x6b\xa9\xcf\xf3\xc8\x6e\x3f\x8e\x55\x5a\x92\x7e\x83\x66\xa9\xcc\x8e\xb2\x43\x55\x33\xc1\x0f\x36\xff\x43\xe1\x91\xd3\x80\x6f\xe1\xf0\xf8\x25\xc2\x90\xab\x76\x5e\x3d\x6d\xc6\xfd\x16\x65\xef\xb0\x28\x77\xb9\xac\x55\x85\xa7\x4b\xcf\xb2\x7b\x39\xbb\x82\x9f\x92\x15\x65\x27\x02\x1e\xbf\x46\x18\xa9\x37\xa0\x2e\xa9\xd1\x74\xc4\xa2\xdc\x31\xd4\x5a\x6a\x73\x51\x9c\xfe\x1f\xd6\x5c\x64\x6e\xe9\x87\x7c\xda\xd3\x45\x9f\xee\xb9\x1b\x91\x7b\xf2\xaf\xf1\x20\x29\x0d\x56\xe6\xd4\xa3\xe7\xd3\xd4\xed\xcf\xa6\xe9\x77\x6c\x50\x8b\xfc\x8f\x3f\xff\xca\xd8\xea\x79\x77\xd9\x2c\xd3\xe7\x09\xcd\xf7\xfa\x14\x47\x1f\x38\x79\x38\x9d\x37\x4b\xb6\xe7\xed\x1e\x2f\x05\x71\xbd\x61\x24\x47\xbd\x61\x9c\xc5\x95\x88\x29\x46\x24\x97\x8a\xea\xa6\xc9\xcf\x11\xb2\x9f\x42\xd2\xd9\xcf\xe6\xa5\x3e\x9b\x1f\x95\x47\x11\x65\x2e\x5b\x77\x8a\x17\x4f\x1d\xe1\xf2\xc6\xdd\x39\xc5\x6a\xea\x45\x04\xa2\x4e\x5b\x4f\x17\x2b\xa5\x17\x31\x4b\xa3\xb1\x10\x66\x0a\xf1\xcb\xbe\x98\xb7\x43\xff\xed\x37\x87\xd6\x7b\x14\xf6\xe0\xda\x89\x6e\xab\xdb\xd1\x58\x73\x9b\x1f\x68\x4c\x33\x82\xac\xcd\x13\x98\x2f\x5b\x37\x3e\x7c\x8b\xa3\xe1\xfc\x0c\xe6\x89\xfa\xdd\x37\xf0\x5b\xe9\xb5\xe7\x76\xcf\x43\xa7\x73\xe8\xd0\xd4\x7b\x8f\xe3\xce\xed\xed\xa4\x0e\xfd\x97\x95\x42\xfb\x61\x10\x1e\xdd\xd8\x0c\x14\xbd\xf8\x8e\xc2\x29\xfe\xf0\x57\x73\xf7\x8a\x00\xb0\x3a\x1e\xb0\xa1\x61\x15\x62\x18\x52\xe5\x8c\xd3\xd0\x69\xd3\xdb\x37\x8b\x68\x4f\x1e\xd1\x02\xdc\xa7\x60\xc4\x9b\x4e\xcd\x21\xa4\x3b\xb6\x75\xf7\xa6\x31\x4c\x9d\x91\xd6\x1e\xdf\xbd\x02\xf4\xc0\x30\x4d\xc2\x74\x18\x1d\xa9\x3b\xc3\xd8\x29\x4f\xa6\x48\x9a\xfe\x1b\x00\x00\xff\xff\xde\x79\x9e\x64\xed\x09\x00\x00")

func builtinToolDataRiemannConfCommonInputCljBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataRiemannConfCommonInputClj,
		"builtin/tool/data/riemann/conf/common/input.clj",
	)
}

func builtinToolDataRiemannConfCommonInputClj() (*asset, error) {
	bytes, err := builtinToolDataRiemannConfCommonInputCljBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/riemann/conf/common/input.clj", size: 2541, mode: os.FileMode(420), modTime: time.Unix(1472761537, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataRiemannConfCommonOutputClj = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x53\xd1\x92\x94\x30\x10\x7c\xdf\xaf\x18\xb3\x2f\xc1\xda\x70\xa8\x6f\x54\x59\x7e\x08\x9e\x55\xa9\x30\xec\xe6\x84\x24\x97\x04\xaa\xd4\xba\x7f\x77\x42\x80\x83\x3b\xb5\x54\x5e\x36\x1b\xba\x7b\xa6\x7b\x06\x6e\x02\xd8\xc1\x68\x59\x62\x54\xa5\x1d\xa3\x1b\xe3\x09\x80\xd7\x1e\x1f\x47\xed\x11\x1a\xd5\xdb\x87\xd1\x63\x19\xa2\xd7\xe6\x0a\xb5\x0c\x40\xc7\x7b\x02\x3d\x3f\x8d\xd7\x38\x48\x63\xca\xab\x97\xee\xa6\x23\x02\xf1\x3b\xf4\x84\xee\xfb\xdf\x40\x95\x35\x9d\xbe\x1e\x80\x45\x71\x3a\xf1\x16\x3b\x03\xab\x8e\x70\x32\xde\x44\x88\x32\x86\x16\x1a\x9c\xd0\xc4\x24\xc7\x7b\x8c\xd0\xdc\x6c\x88\xd4\xe9\xfc\x33\xbf\x2a\xb6\x4a\xd2\x39\xe0\x1e\x45\xa7\x4d\x0b\x67\xf6\xa5\x7c\xfb\xe9\x73\xc9\x08\x1c\xd0\x4f\x5a\xe1\x82\x7f\x26\xac\xf7\x9c\xbc\xdd\x79\x74\xbd\x54\x89\xed\xe7\x0a\x47\xd2\x4e\x8f\xb1\x9d\x82\xeb\x75\x14\xb9\x27\xdd\x41\x3e\x24\xb5\xf9\x45\xfe\x7f\x66\xc4\x2a\xa0\xb9\x7f\x49\xdb\xca\x13\xf3\xd0\x4a\x26\xaf\x57\x67\x2a\x39\xd3\x73\xa6\x09\x91\xac\x5e\x32\xf6\xc1\x6a\x03\x2c\xd9\xa4\x6c\x95\x8c\x29\x81\x09\x7d\xc0\x5d\x6f\xc5\xb1\x60\x91\x9e\x35\x74\xd9\xb6\x02\xcd\xa4\xbd\x35\x03\x19\x15\xd1\x8a\x6d\x9e\xbb\xec\x49\xbc\x75\xf0\x91\x72\x71\xfd\x78\xa5\x92\xbb\xec\x59\x6b\xd5\x57\xf4\x6c\xb1\x97\xec\xf0\x5a\xd9\xa1\xcc\xf7\x34\xf4\xc1\xd9\x40\xcb\x74\x48\x74\x0b\x63\x36\xb4\x68\x94\xec\xf2\x37\xdc\x4b\x72\x4c\xc8\x97\x1b\x78\x77\x5c\x21\x87\x5e\x11\x5c\xf7\x18\x5e\xcd\xfe\x55\xd5\x7f\xd7\x5a\xdc\xe7\x45\x65\x8b\x62\x92\xfa\xe5\x22\xef\x1b\xc8\xd0\x34\x9a\xf0\xbf\xb5\x97\x01\xe6\x8f\x06\xb8\x0c\xdf\x8c\x12\x8f\x23\x8e\xf8\x06\xea\x6d\x82\x3f\xea\xf9\x4a\x04\xfd\x1d\xe1\x5d\x55\x55\x4f\x87\xef\x92\xef\x80\xf3\xae\xb2\xf5\x82\x41\xed\xac\x8f\xf0\xbe\xaa\x3e\xd0\x91\xba\xf8\xd3\xa6\x3c\x51\x3f\x3f\x03\x00\x00\xff\xff\x7d\xfd\x6d\xcc\x55\x04\x00\x00")

func builtinToolDataRiemannConfCommonOutputCljBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataRiemannConfCommonOutputClj,
		"builtin/tool/data/riemann/conf/common/output.clj",
	)
}

func builtinToolDataRiemannConfCommonOutputClj() (*asset, error) {
	bytes, err := builtinToolDataRiemannConfCommonOutputCljBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/riemann/conf/common/output.clj", size: 1109, mode: os.FileMode(420), modTime: time.Unix(1472809201, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataRiemannConfCommonRiemannConfig = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\xdd\x6e\xab\x30\x10\x84\xaf\xe1\x29\x56\x8e\x8e\x8e\xa9\x04\xca\x4d\x7b\x41\xd4\x27\x89\x52\xc9\x35\x0b\xb1\x6a\x6c\xd7\x2c\x49\xaa\xaa\xef\xde\xc5\x84\xb4\xe9\x9f\x90\x6c\xec\x99\x9d\xf9\x64\x19\xf1\x79\x34\x11\xe1\xff\xd6\xf7\xce\xa8\x0a\x49\x57\x7e\xa4\x30\x12\xd4\x11\x5b\x8c\x50\x2b\x6b\x77\x45\xfe\xa3\xd3\xb8\xef\xc6\x5c\x5a\x24\xd8\xee\xfd\x40\x20\xd6\x55\xfa\xc4\x2e\xcf\x24\xe9\x50\x0e\x18\x0f\x6c\x7d\xad\x93\x3c\x2d\x6f\x05\x4b\x63\xf3\xab\x74\x1c\x16\xe5\x5a\x9a\x8a\x02\x46\xe3\x1b\xa3\xb9\xf8\xa5\xc4\x53\x98\xf0\x6e\x2f\x04\xc6\x35\x78\x02\x99\xb6\x62\x97\x73\xd6\x40\x11\x55\x3f\xe4\x59\x26\x1b\x6c\xd5\x68\x99\x9d\xc8\xc2\xdd\x9a\x55\xbe\x3c\xee\x91\x13\xa4\xf3\x04\x92\x54\xd7\x61\x03\x82\x0f\xa6\xe5\x0a\x32\xde\x09\x6e\x65\x5f\x96\x22\xa7\xbf\x22\xcd\x6d\x60\xc5\x2d\xad\x87\x7f\xf3\xf9\x32\xab\xbd\xb5\xa8\xa9\x11\x69\x6a\x73\x95\x7f\x0f\xb2\x0e\x76\xec\x8c\x03\x3c\xa0\xa3\x02\x44\xe3\xf5\x13\xc6\xa5\x84\x71\x7b\x15\x20\xe2\x31\x1a\xc2\xf4\x08\x46\x23\x74\x51\x85\xfd\xd9\xb1\x99\xf7\xeb\xf4\x3f\x82\x67\xe3\x39\x58\x6a\xdf\x07\x08\x2a\x0e\x58\xce\x86\xa5\xa3\x4c\xcf\x7c\xbe\x53\x44\xd1\x3c\x8e\x84\xc3\x57\x94\xe2\x33\xcb\x8c\x32\x2d\xe9\x0d\x16\x98\x85\x7a\x25\x1e\xa2\xc1\x5e\x39\x57\xdd\x88\x8f\xc1\x22\x67\x77\xfe\x1e\x00\x00\xff\xff\x60\x5c\xd8\x2c\x85\x02\x00\x00")

func builtinToolDataRiemannConfCommonRiemannConfigBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataRiemannConfCommonRiemannConfig,
		"builtin/tool/data/riemann/conf/common/riemann.config",
	)
}

func builtinToolDataRiemannConfCommonRiemannConfig() (*asset, error) {
	bytes, err := builtinToolDataRiemannConfCommonRiemannConfigBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/riemann/conf/common/riemann.config", size: 645, mode: os.FileMode(420), modTime: time.Unix(1472743921, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataRiemannPortsYml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x55\x30\x05\x02\x2e\x30\x65\x06\x08\x00\x00\xff\xff\x32\xde\x26\xcb\x0d\x00\x00\x00")

func builtinToolDataRiemannPortsYmlBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataRiemannPortsYml,
		"builtin/tool/data/riemann/ports.yml",
	)
}

func builtinToolDataRiemannPortsYml() (*asset, error) {
	bytes, err := builtinToolDataRiemannPortsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/riemann/ports.yml", size: 13, mode: os.FileMode(420), modTime: time.Unix(1472740726, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataRiemannRunSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\xe2\xd2\x2f\x2d\x2e\x02\x73\x8b\x32\x53\x73\x13\xf3\xf2\x14\xf4\x53\x4b\x92\x61\x1c\x18\xad\x97\x9c\x9f\x97\x96\x99\x0e\x08\x00\x00\xff\xff\xc9\xfe\x9e\x9e\x39\x00\x00\x00")

func builtinToolDataRiemannRunShBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataRiemannRunSh,
		"builtin/tool/data/riemann/run.sh",
	)
}

func builtinToolDataRiemannRunSh() (*asset, error) {
	bytes, err := builtinToolDataRiemannRunShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/riemann/run.sh", size: 57, mode: os.FileMode(420), modTime: time.Unix(1472740771, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _builtinToolDataRiemannSetupSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8d\x41\x4b\x33\x31\x10\x86\xcf\xdf\xfc\x8a\xf9\xf0\x26\x24\xb1\x1e\x05\x0f\x4a\x2b\x78\xd9\x82\x78\x14\x96\x6c\x32\xdd\x4d\xbb\x99\x84\xec\xb4\xda\x7f\x6f\x56\x6c\x41\x8b\x97\x09\x33\xef\xf3\x3e\xb9\xfa\x6f\xba\xc0\xa6\xb3\xd3\x00\x13\x09\x2a\x02\xa0\x8f\x9c\x8a\xe0\x72\xf5\xf8\xfc\xd0\xb4\x4f\x2f\xeb\xe6\x75\xd5\x2c\xef\x39\x71\x60\xa1\x62\x9d\x84\x43\xc5\x6c\x16\xd5\xd7\xca\x3e\x7b\x2b\x74\x5e\x03\x4f\x62\xc7\x11\xd5\x11\xdf\xe0\x9f\xa7\x8d\xdd\x8f\xa2\xb6\x85\xe6\xf5\xbd\x12\x00\xf3\x44\xb5\x46\x23\x31\x9b\x12\x28\x5a\x66\xed\xa9\xc3\x41\x24\x4f\x77\xc6\xd8\x3c\x1c\x8b\x76\x29\x9e\xd2\xd3\xdb\xde\xe8\x5b\xbd\x58\xb4\xf5\x83\xb9\x00\x3e\xef\x7a\x54\xe1\xc2\x04\x10\x0f\x68\x5c\xe2\x4d\x1d\x31\xa6\xb3\x40\xcf\xb7\xd0\xa3\x21\x71\xbf\xe5\xdf\x19\xc4\x9d\x0f\x05\x55\xfe\x09\xa5\xc8\xc1\x7e\x5d\x2e\xdc\xd7\xda\x8d\xdb\xbf\xe8\xcf\x00\x00\x00\xff\xff\xea\xea\xb5\xd9\x62\x01\x00\x00")

func builtinToolDataRiemannSetupShBytes() ([]byte, error) {
	return bindataRead(
		_builtinToolDataRiemannSetupSh,
		"builtin/tool/data/riemann/setup.sh",
	)
}

func builtinToolDataRiemannSetupSh() (*asset, error) {
	bytes, err := builtinToolDataRiemannSetupShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "builtin/tool/data/riemann/setup.sh", size: 354, mode: os.FileMode(420), modTime: time.Unix(1472759158, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"builtin/tool/data/collectd/conf/common/collectd.conf": builtinToolDataCollectdConfCommonCollectdConf,
	"builtin/tool/data/collectd/conf/metrics/cpu/cpu.conf": builtinToolDataCollectdConfMetricsCpuCpuConf,
	"builtin/tool/data/collectd/conf/metrics/memory/memory.conf": builtinToolDataCollectdConfMetricsMemoryMemoryConf,
	"builtin/tool/data/collectd/ports.yml": builtinToolDataCollectdPortsYml,
	"builtin/tool/data/collectd/run.sh": builtinToolDataCollectdRunSh,
	"builtin/tool/data/collectd/setup.sh": builtinToolDataCollectdSetupSh,
	"builtin/tool/data/grafana/conf/common/dashboard.json": builtinToolDataGrafanaConfCommonDashboardJson,
	"builtin/tool/data/grafana/conf/common/datasources.json": builtinToolDataGrafanaConfCommonDatasourcesJson,
	"builtin/tool/data/grafana/conf/metrics/cpu/panel.json": builtinToolDataGrafanaConfMetricsCpuPanelJson,
	"builtin/tool/data/grafana/conf/metrics/memory/panel.json": builtinToolDataGrafanaConfMetricsMemoryPanelJson,
	"builtin/tool/data/grafana/ports.yml": builtinToolDataGrafanaPortsYml,
	"builtin/tool/data/grafana/run.sh": builtinToolDataGrafanaRunSh,
	"builtin/tool/data/grafana/setup.sh": builtinToolDataGrafanaSetupSh,
	"builtin/tool/data/graphite/conf/common/carbon.conf": builtinToolDataGraphiteConfCommonCarbonConf,
	"builtin/tool/data/graphite/conf/common/graphite-api.yaml": builtinToolDataGraphiteConfCommonGraphiteApiYaml,
	"builtin/tool/data/graphite/conf/common/storage-aggregation.conf": builtinToolDataGraphiteConfCommonStorageAggregationConf,
	"builtin/tool/data/graphite/conf/common/storage-schemas.conf": builtinToolDataGraphiteConfCommonStorageSchemasConf,
	"builtin/tool/data/graphite/conf/common/supervisord.conf": builtinToolDataGraphiteConfCommonSupervisordConf,
	"builtin/tool/data/graphite/ports.yml": builtinToolDataGraphitePortsYml,
	"builtin/tool/data/graphite/run.sh": builtinToolDataGraphiteRunSh,
	"builtin/tool/data/graphite/setup.sh": builtinToolDataGraphiteSetupSh,
	"builtin/tool/data/prom-collectd-exporter/ports.yml": builtinToolDataPromCollectdExporterPortsYml,
	"builtin/tool/data/prom-collectd-exporter/run.sh": builtinToolDataPromCollectdExporterRunSh,
	"builtin/tool/data/prom-collectd-exporter/setup.sh": builtinToolDataPromCollectdExporterSetupSh,
	"builtin/tool/data/prometheus/conf/common/prometheus.yml": builtinToolDataPrometheusConfCommonPrometheusYml,
	"builtin/tool/data/prometheus/ports.yml": builtinToolDataPrometheusPortsYml,
	"builtin/tool/data/prometheus/run.sh": builtinToolDataPrometheusRunSh,
	"builtin/tool/data/prometheus/setup.sh": builtinToolDataPrometheusSetupSh,
	"builtin/tool/data/riemann/conf/common/input.clj": builtinToolDataRiemannConfCommonInputClj,
	"builtin/tool/data/riemann/conf/common/output.clj": builtinToolDataRiemannConfCommonOutputClj,
	"builtin/tool/data/riemann/conf/common/riemann.config": builtinToolDataRiemannConfCommonRiemannConfig,
	"builtin/tool/data/riemann/ports.yml": builtinToolDataRiemannPortsYml,
	"builtin/tool/data/riemann/run.sh": builtinToolDataRiemannRunSh,
	"builtin/tool/data/riemann/setup.sh": builtinToolDataRiemannSetupSh,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"builtin": &bintree{nil, map[string]*bintree{
		"tool": &bintree{nil, map[string]*bintree{
			"data": &bintree{nil, map[string]*bintree{
				"collectd": &bintree{nil, map[string]*bintree{
					"conf": &bintree{nil, map[string]*bintree{
						"common": &bintree{nil, map[string]*bintree{
							"collectd.conf": &bintree{builtinToolDataCollectdConfCommonCollectdConf, map[string]*bintree{
							}},
						}},
						"metrics": &bintree{nil, map[string]*bintree{
							"cpu": &bintree{nil, map[string]*bintree{
								"cpu.conf": &bintree{builtinToolDataCollectdConfMetricsCpuCpuConf, map[string]*bintree{
								}},
							}},
							"memory": &bintree{nil, map[string]*bintree{
								"memory.conf": &bintree{builtinToolDataCollectdConfMetricsMemoryMemoryConf, map[string]*bintree{
								}},
							}},
						}},
					}},
					"ports.yml": &bintree{builtinToolDataCollectdPortsYml, map[string]*bintree{
					}},
					"run.sh": &bintree{builtinToolDataCollectdRunSh, map[string]*bintree{
					}},
					"setup.sh": &bintree{builtinToolDataCollectdSetupSh, map[string]*bintree{
					}},
				}},
				"grafana": &bintree{nil, map[string]*bintree{
					"conf": &bintree{nil, map[string]*bintree{
						"common": &bintree{nil, map[string]*bintree{
							"dashboard.json": &bintree{builtinToolDataGrafanaConfCommonDashboardJson, map[string]*bintree{
							}},
							"datasources.json": &bintree{builtinToolDataGrafanaConfCommonDatasourcesJson, map[string]*bintree{
							}},
						}},
						"metrics": &bintree{nil, map[string]*bintree{
							"cpu": &bintree{nil, map[string]*bintree{
								"panel.json": &bintree{builtinToolDataGrafanaConfMetricsCpuPanelJson, map[string]*bintree{
								}},
							}},
							"memory": &bintree{nil, map[string]*bintree{
								"panel.json": &bintree{builtinToolDataGrafanaConfMetricsMemoryPanelJson, map[string]*bintree{
								}},
							}},
						}},
					}},
					"ports.yml": &bintree{builtinToolDataGrafanaPortsYml, map[string]*bintree{
					}},
					"run.sh": &bintree{builtinToolDataGrafanaRunSh, map[string]*bintree{
					}},
					"setup.sh": &bintree{builtinToolDataGrafanaSetupSh, map[string]*bintree{
					}},
				}},
				"graphite": &bintree{nil, map[string]*bintree{
					"conf": &bintree{nil, map[string]*bintree{
						"common": &bintree{nil, map[string]*bintree{
							"carbon.conf": &bintree{builtinToolDataGraphiteConfCommonCarbonConf, map[string]*bintree{
							}},
							"graphite-api.yaml": &bintree{builtinToolDataGraphiteConfCommonGraphiteApiYaml, map[string]*bintree{
							}},
							"storage-aggregation.conf": &bintree{builtinToolDataGraphiteConfCommonStorageAggregationConf, map[string]*bintree{
							}},
							"storage-schemas.conf": &bintree{builtinToolDataGraphiteConfCommonStorageSchemasConf, map[string]*bintree{
							}},
							"supervisord.conf": &bintree{builtinToolDataGraphiteConfCommonSupervisordConf, map[string]*bintree{
							}},
						}},
					}},
					"ports.yml": &bintree{builtinToolDataGraphitePortsYml, map[string]*bintree{
					}},
					"run.sh": &bintree{builtinToolDataGraphiteRunSh, map[string]*bintree{
					}},
					"setup.sh": &bintree{builtinToolDataGraphiteSetupSh, map[string]*bintree{
					}},
				}},
				"prom-collectd-exporter": &bintree{nil, map[string]*bintree{
					"ports.yml": &bintree{builtinToolDataPromCollectdExporterPortsYml, map[string]*bintree{
					}},
					"run.sh": &bintree{builtinToolDataPromCollectdExporterRunSh, map[string]*bintree{
					}},
					"setup.sh": &bintree{builtinToolDataPromCollectdExporterSetupSh, map[string]*bintree{
					}},
				}},
				"prometheus": &bintree{nil, map[string]*bintree{
					"conf": &bintree{nil, map[string]*bintree{
						"common": &bintree{nil, map[string]*bintree{
							"prometheus.yml": &bintree{builtinToolDataPrometheusConfCommonPrometheusYml, map[string]*bintree{
							}},
						}},
					}},
					"ports.yml": &bintree{builtinToolDataPrometheusPortsYml, map[string]*bintree{
					}},
					"run.sh": &bintree{builtinToolDataPrometheusRunSh, map[string]*bintree{
					}},
					"setup.sh": &bintree{builtinToolDataPrometheusSetupSh, map[string]*bintree{
					}},
				}},
				"riemann": &bintree{nil, map[string]*bintree{
					"conf": &bintree{nil, map[string]*bintree{
						"common": &bintree{nil, map[string]*bintree{
							"input.clj": &bintree{builtinToolDataRiemannConfCommonInputClj, map[string]*bintree{
							}},
							"output.clj": &bintree{builtinToolDataRiemannConfCommonOutputClj, map[string]*bintree{
							}},
							"riemann.config": &bintree{builtinToolDataRiemannConfCommonRiemannConfig, map[string]*bintree{
							}},
						}},
					}},
					"ports.yml": &bintree{builtinToolDataRiemannPortsYml, map[string]*bintree{
					}},
					"run.sh": &bintree{builtinToolDataRiemannRunSh, map[string]*bintree{
					}},
					"setup.sh": &bintree{builtinToolDataRiemannSetupSh, map[string]*bintree{
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

